<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Heat Map Filtter' datatype='string' name='[hours.Wednesday Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Review Count&quot;'>
        <calculation class='tableau' formula='&quot;Review Count&quot;' />
        <members>
          <member value='&quot;Weighted Rating&quot;' />
          <member value='&quot;Review Count&quot;' />
          <member value='&quot;Avg Review Count&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='business (yelp)' inline='true' name='federated.15kds3c1rjcmo31ewdxgk042r2ms' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='BigQuery' name='bigquery.1f7otmd143121z13zha7e0og37d0'>
            <connection CATALOG='fresh-myth-366902' EXECCATALOG='fresh-myth-366902' authentication='oauth' class='bigquery' connection-dialect='google-sql' project='CSE6242' schema='yelp' server-oauth='' username='thecalvinkim@gmail.com' />
          </named-connection>
          <named-connection caption='Recent Reviews 2020-2022' name='excel-direct.0v7zco015kzrlu11itbj11qibxf5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Calvin/Documents/GTOMSA/Data &amp; Visual Analytics/Project/Recent Reviews 2020-2022.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0v7zco015kzrlu11itbj11qibxf5' name='Relevant' table='[Relevant$]' type='table'>
          <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
            <column datatype='string' name='city' ordinal='0' />
            <column datatype='string' name='business_id' ordinal='1' />
            <column datatype='integer' name='review_count' ordinal='2' />
            <column datatype='real' name='rating' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='bigquery.1f7otmd143121z13zha7e0og37d0' name='Custom SQL Query' type='text'>with cte1 as (&#13;
SELECT `business`.`_id`.`oid` AS `Xid_oid`,&#13;
  `business`.`address` AS `address`,&#13;
  `business`.`business_id` AS `business_id`,&#13;
  `business`.`categories` AS `categories`,&#13;
  CASE&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%phila%&apos; THEN &apos;Philadelphia, PA&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%tampa%&apos; THEN &apos;Tampa, FL&apos;&#13;
       WHEN `business`.`city` = &apos;New Orleans&apos; THEN &apos;New Orleans, LA&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%nashville%&apos; THEN &apos;Nashville, TN&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%polis%&apos; THEN &apos;Indianapolis, IN&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%tucson%&apos; THEN &apos;Tucson, AZ&apos;&#13;
       WHEN `business`.`city` = &apos;Reno&apos; THEN &apos;Reno, NV&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%santa%&apos; THEN &apos;Santa Barbara, CA&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%louis%&apos; THEN &apos;Saint Louis, MO&apos;&#13;
       WHEN `business`.`city` = &apos;Boise&apos; THEN &apos;Boise, ID&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%clearwater%&apos; THEN &apos;Clearwater, FL&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%peters%&apos; THEN &apos;Saint Petersburg, FL&apos;&#13;
  END as city_state,&#13;
  `business`.`latitude` AS `latitude`,&#13;
  `business`.`longitude` AS `longitude`,&#13;
  `business`.`name` AS `name`,&#13;
  `business`.`postal_code` AS `postal_code`,&#13;
  `business`.`review_count` AS `review_count`,&#13;
  `business`.`stars` AS `stars`,&#13;
  `business`.`state` AS `state`&#13;
FROM `fresh-myth-366902.yelp`.`business` `business`)&#13;
select&#13;
    *&#13;
from&#13;
    cte1&#13;
where city_state is not null&#13;
and `Xid_oid` NOT IN (&apos;6361bc1cce759c550ed3eb48&apos;&#13;
,&apos;6361bba9ce759c550ed25233&apos;&#13;
,&apos;6361bba6ce759c550ed24657&apos;&#13;
,&apos;6361bc12ce759c550ed3c7b8&apos;&#13;
,&apos;6361bbadce759c550ed25cd9&apos;&#13;
,&apos;6361bb9bce759c550ed21af1&apos;&#13;
,&apos;6361bbffce759c550ed38364&apos;&#13;
,&apos;6361bbf6ce759c550ed36276&apos;&#13;
,&apos;6361bbd8ce759c550ed2f5c6&apos;&#13;
,&apos;6361bbf6ce759c550ed3646a&apos;&#13;
,&apos;6361bc24ce759c550ed40975&apos;&#13;
,&apos;6361bbffce759c550ed380a2&apos;&#13;
,&apos;6361bc32ce759c550ed43a15&apos;&#13;
,&apos;6361bba0ce759c550ed22d48&apos;&#13;
,&apos;6361bbb4ce759c550ed27530&apos;&#13;
,&apos;6361bbe3ce759c550ed31d14&apos;&#13;
,&apos;6361bc31ce759c550ed43703&apos;&#13;
,&apos;6361bc28ce759c550ed414b5&apos;)</relation>
          <relation connection='excel-direct.0v7zco015kzrlu11itbj11qibxf5' name='Relevant' table='[Relevant$]' type='table'>
            <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
              <column datatype='string' name='city' ordinal='0' />
              <column datatype='string' name='business_id' ordinal='1' />
              <column datatype='integer' name='review_count' ordinal='2' />
              <column datatype='real' name='rating' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Xid_oid]' value='[Custom SQL Query].[Xid_oid]' />
          <map key='[address]' value='[Custom SQL Query].[address]' />
          <map key='[business_id (Relevant)]' value='[Relevant].[business_id]' />
          <map key='[business_id]' value='[Custom SQL Query].[business_id]' />
          <map key='[categories]' value='[Custom SQL Query].[categories]' />
          <map key='[city (Relevant)]' value='[Relevant].[city]' />
          <map key='[city_state]' value='[Custom SQL Query].[city_state]' />
          <map key='[latitude]' value='[Custom SQL Query].[latitude]' />
          <map key='[longitude]' value='[Custom SQL Query].[longitude]' />
          <map key='[name]' value='[Custom SQL Query].[name]' />
          <map key='[postal_code]' value='[Custom SQL Query].[postal_code]' />
          <map key='[rating]' value='[Relevant].[rating]' />
          <map key='[review_count (Relevant)]' value='[Relevant].[review_count]' />
          <map key='[review_count]' value='[Custom SQL Query].[review_count]' />
          <map key='[stars]' value='[Custom SQL Query].[stars]' />
          <map key='[state]' value='[Custom SQL Query].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Relevant]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Xid_oid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Xid_oid]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>Xid_oid</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>address</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>business_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[categories]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>categories</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city_state]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>city_state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>review_count</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>stars</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[business_821EDB1684CB441383B6F5E99B36361B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city (Relevant)]</local-name>
            <parent-name>[Relevant]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Relevant_06C9217F9C154C4B82FD703995702D22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id (Relevant)]</local-name>
            <parent-name>[Relevant]</parent-name>
            <remote-alias>business_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Relevant_06C9217F9C154C4B82FD703995702D22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review_count (Relevant)]</local-name>
            <parent-name>[Relevant]</parent-name>
            <remote-alias>review_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Relevant_06C9217F9C154C4B82FD703995702D22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[Relevant]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Relevant_06C9217F9C154C4B82FD703995702D22]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg. Successful Rating' datatype='real' name='[Calculation_1727693444340695040]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IFNULL(AVG(IF [Calculation_1812417403059662848] = 1 THEN [rating] END),0)' />
      </column>
      <column caption='Successful Restaurant Count' datatype='integer' name='[Calculation_1727693444346118145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1812417403059662848])' />
      </column>
      <column caption='Success' datatype='string' name='[Calculation_1727693444351631362]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1812417403059662848] = 1 THEN &apos;Successful&apos; ELSE &apos; Not Successful&apos; END' />
      </column>
      <column caption='restaurant_flag' datatype='boolean' name='[Calculation_177610737570590720]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([categories], &apos;Restaurants&apos;) THEN TRUE&#13;&#10;ELSE FALSE END' />
      </column>
      <column caption='Cuisine' datatype='string' name='[Calculation_177610737607733249]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([categories], &quot;Middle Eastern&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mediterranean&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mexican&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Turkish&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Korean&quot;) THEN &quot;Korean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Chinese&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Japanese&quot;) THEN &quot;Japanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cajun/Creole&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;French&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;American&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Moroccan&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indian&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Italian&quot;) THEN &quot;Italian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegan&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Spanish&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Thai&quot;) THEN &quot;Thai&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Himalayan/Nepalese&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;African&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Caribbean&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;German&quot;) THEN &quot;German&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Barbeque&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Asian Fusion&quot;) THEN &quot;Asian Fusion&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indonesian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ethiopian&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vietnamese&quot;) THEN &quot;Vietnamese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Russian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Filipino&quot;) THEN &quot;Filipino&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Georgian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Canadian&quot;) THEN &quot;Canadian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Greek&quot;) THEN &quot;Greek&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Polish&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cuban&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Persian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Southern&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pakistani&quot;) THEN &quot;Pakistani&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pan Asian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Taiwanese&quot;) THEN &quot;Taiwanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ukrainian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Belgian&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Irish&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Brazilian&quot;) THEN &quot;Brazilian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;European&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegetarian&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;British&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Armenian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Tex-Mex&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Basque&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Kosher&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Soul&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cafe&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Fast Food&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bakeries&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Food Truck&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Delis&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breweries&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breakfast&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Comfort&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Seafood&quot;) THEN &quot;Seafood&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Buffet&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Gastropub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bistros&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Diner&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Steakhouse&quot;) THEN &quot;Steakhouse&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pizza&quot;) THEN &quot;Pizza&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
      </column>
      <column caption='Weighted Rating' datatype='real' name='[Calculation_177610737610366978]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(SUM([stars]*[review_count])/SUM([review_count]),1)' />
      </column>
      <column caption='Restaurant Count' datatype='integer' name='[Calculation_177610737621962755]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Xid_oid])' />
      </column>
      <column caption='Heat Map Color' datatype='real' name='[Calculation_177610737630924805]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[hours.Wednesday Parameter] = &apos;Weighted Rating&apos; THEN [Calculation_177610737610366978]&#13;&#10;ELSEIF [Parameters].[hours.Wednesday Parameter] = &apos;Review Count&apos; THEN SUM([review_count])&#13;&#10;ELSEIF [Parameters].[hours.Wednesday Parameter] = &apos;Avg Review Count&apos; THEN avg([review_count])&#13;&#10;END' />
      </column>
      <column caption='Success Flag' datatype='integer' name='[Calculation_1812417403059662848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [city_state] = &apos;Philadelphia, PA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 23 THEN 1 &#13;&#10;ELSEIF [city_state] = &apos;Tampa, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 32 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Boise, ID&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 24 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Clearwater, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 35 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Indianapolis, IN&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 25 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Nashville, TN&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 38 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;New Orleans, LA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 45 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Reno, NV&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 62 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Saint Louis, MO&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 27 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Saint Petersburg, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 36 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Santa Barbara, CA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 67 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Tucson, AZ&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 32 THEN 1&#13;&#10;ELSE 0 &#13;&#10;END' />
      </column>
      <column caption='Success Ratio' datatype='real' name='[Calculation_1812417403059843073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Calculation_1812417403059662848])/COUNTD([Xid_oid]))' />
      </column>
      <column datatype='string' name='[Latitude, Longitude, Postal Code (clusters)]' parent-model='[AnalyticModel:{301fb395-fd43-4c3f-aa10-313e859d82f3}]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Latitude, Longitude, Postal Code]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>(39.876142999999999,-75.242885999999999,&quot;19153&quot;)</value>
            <value>(39.877222199999999,-75.241388900000004,&quot;19153&quot;)</value>
            <value>(39.878776550300003,-75.242362976099997,&quot;19153&quot;)</value>
            <value>(39.909191200000002,-75.164661699999996,&quot;19148&quot;)</value>
            <value>(39.910700200000001,-75.231872899999999,&quot;19142&quot;)</value>
            <value>(39.911957999999998,-75.183404999999993,&quot;19145&quot;)</value>
            <value>(39.912509,-75.2429554,&quot;19153&quot;)</value>
            <value>(39.913126599999998,-75.155426199999994,&quot;19148&quot;)</value>
            <value>(39.9144164,-75.153159500000001,&quot;19148&quot;)</value>
            <value>(39.915855700000002,-75.1524261,&quot;19148&quot;)</value>
            <value>(39.916762499999997,-75.169005100000007,&quot;19148&quot;)</value>
            <value>(39.916870299999999,-75.237548500000003,&quot;19142&quot;)</value>
            <value>(39.917006899999997,-75.236557199999993,&quot;19142&quot;)</value>
            <value>(39.917979199999998,-75.170749299999997,&quot;19148&quot;)</value>
            <value>(39.9183863039,-75.181393703699996,&quot;19145&quot;)</value>
            <value>(39.919037199999998,-75.183698800000002,&quot;19145&quot;)</value>
            <value>(39.919210900000003,-75.166861900000001,&quot;19148&quot;)</value>
            <value>(39.9192284429,-75.158900991099998,&quot;19148&quot;)</value>
            <value>(39.919286399999997,-75.159155400000003,&quot;19148&quot;)</value>
            <value>(39.920299200000002,-75.158639399999998,&quot;19148&quot;)</value>
            <value>(39.920702400000003,-75.146513100000007,&quot;19148&quot;)</value>
            <value>(39.921172300000002,-75.158396100000004,&quot;19148&quot;)</value>
            <value>(39.921937499999999,-75.152843200000007,&quot;19148&quot;)</value>
            <value>(39.922077600000001,-75.150827800000002,&quot;19148&quot;)</value>
            <value>(39.922169699999998,-75.2307433,&quot;19142&quot;)</value>
            <value>(39.923048100000003,-75.178077700000003,&quot;19145&quot;)</value>
            <value>(39.923808700000002,-75.165935599999997,&quot;19148&quot;)</value>
            <value>(39.923855699999997,-75.170167899999996,&quot;19145&quot;)</value>
            <value>(39.924613999999998,-75.161195000000006,&quot;19148&quot;)</value>
            <value>(39.924903,-75.174728998700004,&quot;19145&quot;)</value>
            <value>(39.926769,-75.146209999999996,&quot;19148&quot;)</value>
            <value>(39.926864500000001,-75.1542417,&quot;19148&quot;)</value>
            <value>(39.9277406,-75.165778900000007,&quot;19148&quot;)</value>
            <value>(39.927743800000002,-75.158573899999993,&quot;19148&quot;)</value>
            <value>(39.928001899999998,-75.169290099999998,&quot;19148&quot;)</value>
            <value>(39.928865671700002,-75.156988372200004,&quot;19148&quot;)</value>
            <value>(39.928901099999997,-75.157034800000005,&quot;19148&quot;)</value>
            <value>(39.928989799999997,-75.164741500000005,&quot;19148&quot;)</value>
            <value>(39.930121,-75.162826300000006,&quot;19147&quot;)</value>
            <value>(39.930424100000003,-75.156311200000005,&quot;19147&quot;)</value>
            <value>(39.932169000000002,-75.144588200000001,&quot;19147&quot;)</value>
            <value>(39.933478899999997,-75.172133099999996,&quot;19146&quot;)</value>
            <value>(39.933864,-75.154684000000003,&quot;19148&quot;)</value>
            <value>(39.934452134099999,-75.154401535900007,&quot;19147&quot;)</value>
            <value>(39.934523953300001,-75.154587733100001,&quot;19147&quot;)</value>
            <value>(39.934632265499999,-75.155174760799994,&quot;19147&quot;)</value>
            <value>(39.934696099999996,-75.170931699999997,&quot;19146&quot;)</value>
            <value>(39.934744000000002,-75.153256999999996,&quot;19147&quot;)</value>
            <value>(39.935137300000001,-75.165271399999995,&quot;19147&quot;)</value>
            <value>(39.936172800000001,-75.146443500000004,&quot;19147&quot;)</value>
            <value>(39.936306999999999,-75.157264999999995,&quot;19147&quot;)</value>
            <value>(39.936494500000002,-75.156775999999994,&quot;19147&quot;)</value>
            <value>(39.936768100000002,-75.166565500000004,&quot;19147&quot;)</value>
            <value>(39.936934000000001,-75.161837000000006,&quot;19147&quot;)</value>
            <value>(39.938037700000002,-75.171410399999999,&quot;19146&quot;)</value>
            <value>(39.9398664,-75.154560900000007,&quot;19147&quot;)</value>
            <value>(39.940474799999997,-75.150777399999996,&quot;19147&quot;)</value>
            <value>(39.940541699999997,-75.145975800000002,&quot;19147&quot;)</value>
            <value>(39.940953800000003,-75.1474829,&quot;19147&quot;)</value>
            <value>(39.941008400000001,-75.145797000000002,&quot;19147&quot;)</value>
            <value>(39.941124700000003,-75.146507299999996,&quot;19147&quot;)</value>
            <value>(39.941203999999999,-75.165126999999998,&quot;19147&quot;)</value>
            <value>(39.9412059,-75.146872799999997,&quot;19147&quot;)</value>
            <value>(39.941927574799998,-75.152733807199994,&quot;19147&quot;)</value>
            <value>(39.941938,-75.152867999999998,&quot;19147&quot;)</value>
            <value>(39.942310599999999,-75.153582900000004,&quot;19147&quot;)</value>
            <value>(39.942408299999997,-75.150897999999998,&quot;19147&quot;)</value>
            <value>(39.943387169600001,-75.164223928499993,&quot;19147&quot;)</value>
            <value>(39.9440575,-75.170108799999994,&quot;19146&quot;)</value>
            <value>(39.9441569667,-75.209824070300002,&quot;19143&quot;)</value>
            <value>(39.944406052600002,-75.172880617199993,&quot;19146&quot;)</value>
            <value>(39.944741399999998,-75.164923900000005,&quot;19147&quot;)</value>
            <value>(39.9447422,-75.1649204,&quot;19147&quot;)</value>
            <value>(39.944752999999999,-75.16489,&quot;19147&quot;)</value>
            <value>(39.945120099999997,-75.178822600000004,&quot;19146&quot;)</value>
            <value>(39.945242200000003,-75.238733499999995,&quot;19143&quot;)</value>
            <value>(39.947037999999999,-75.157443000000001,&quot;19107&quot;)</value>
            <value>(39.947166299999999,-75.157392799999997,&quot;19107&quot;)</value>
            <value>(39.947449678799998,-75.143934227800003,&quot;19106&quot;)</value>
            <value>(39.947485499999999,-75.222985300000005,&quot;19143&quot;)</value>
            <value>(39.947642000000002,-75.143421000000004,&quot;19106&quot;)</value>
            <value>(39.947822899999998,-75.160029499999993,&quot;19107&quot;)</value>
            <value>(39.948021506300002,-75.143306215899997,&quot;19106&quot;)</value>
            <value>(39.948145799999999,-75.142882799999995,&quot;19106&quot;)</value>
            <value>(39.948185700000003,-75.153714500000007,&quot;19106&quot;)</value>
            <value>(39.9483198,-75.217389800000007,&quot;19143&quot;)</value>
            <value>(39.948328699999998,-75.174522499999995,&quot;19103&quot;)</value>
            <value>(39.948332999999998,-75.174520999999999,&quot;19103&quot;)</value>
            <value>(39.948373299799997,-75.153748300000004,&quot;19106&quot;)</value>
            <value>(39.948459999999997,-75.221492999999995,&quot;19143&quot;)</value>
            <value>(39.948497000000003,-75.216261099999997,&quot;19143&quot;)</value>
            <value>(39.948525199999999,-75.216250200000005,&quot;19143&quot;)</value>
            <value>(39.9485257778,-75.143727802000001,&quot;19106&quot;)</value>
            <value>(39.9485776,-75.216276899999997,&quot;19143&quot;)</value>
            <value>(39.948883899999998,-75.159954099999993,&quot;19107&quot;)</value>
            <value>(39.948918599999999,-75.1471667,&quot;19106&quot;)</value>
            <value>(39.948946857499998,-75.159237943600004,&quot;19107&quot;)</value>
            <value>(39.949118800000001,-75.164844099999996,&quot;19102&quot;)</value>
            <value>(39.9491534,-75.152919100000005,&quot;19106&quot;)</value>
            <value>(39.949193000000001,-75.159102000000004,&quot;19107&quot;)</value>
            <value>(39.9493255,-75.166704300000006,&quot;19102&quot;)</value>
            <value>(39.949531375900001,-75.162157025900001,&quot;19107&quot;)</value>
            <value>(39.949756299999997,-75.148062300000007,&quot;19106&quot;)</value>
            <value>(39.949786000000003,-75.152623000000006,&quot;19106&quot;)</value>
            <value>(39.950054999999999,-75.168066899999999,&quot;19103&quot;)</value>
            <value>(39.950215,-75.166346000000004,&quot;19102&quot;)</value>
            <value>(39.950246999999997,-75.167597999999998,&quot;19102&quot;)</value>
            <value>(39.950273469099997,-75.165993755399995,&quot;19106&quot;)</value>
            <value>(39.950334300000002,-75.191715799999997,&quot;19104&quot;)</value>
            <value>(39.950352000000002,-75.161582899999999,&quot;19107&quot;)</value>
            <value>(39.950358600000001,-75.1615836,&quot;19107&quot;)</value>
            <value>(39.950505900000003,-75.195191899999998,&quot;19104&quot;)</value>
            <value>(39.950530878599999,-75.169196938400006,&quot;19103&quot;)</value>
            <value>(39.950792100000001,-75.195303199999998,&quot;19195&quot;)</value>
            <value>(39.951003703300003,-75.198065612099995,&quot;19104&quot;)</value>
            <value>(39.951028700000002,-75.197274500000006,&quot;19104&quot;)</value>
            <value>(39.951065287699997,-75.166414794600001,&quot;19102&quot;)</value>
            <value>(39.951130999999997,-75.198256000000001,&quot;19104&quot;)</value>
            <value>(39.951293700000001,-75.152622699999995,&quot;19106&quot;)</value>
            <value>(39.9513263845,-75.169882960600006,&quot;19103&quot;)</value>
            <value>(39.951523000000002,-75.203284300000007,&quot;19104&quot;)</value>
            <value>(39.951586440500002,-75.156585987200003,&quot;19107&quot;)</value>
            <value>(39.951615376500001,-75.2033457223,&quot;19104&quot;)</value>
            <value>(39.951823300000001,-75.173394000000002,&quot;19103&quot;)</value>
            <value>(39.951832799999998,-75.173394000000002,&quot;19103&quot;)</value>
            <value>(39.951888599999997,-75.171803400000002,&quot;19103&quot;)</value>
            <value>(39.952111500000001,-75.173834900000003,&quot;19103&quot;)</value>
            <value>(39.952140999999997,-75.158536999999995,&quot;19107&quot;)</value>
            <value>(39.952151700000002,-75.175754400000002,&quot;19103&quot;)</value>
            <value>(39.952201100000003,-75.173172699999995,&quot;19103&quot;)</value>
            <value>(39.952355323299997,-75.168056684999996,&quot;19103&quot;)</value>
            <value>(39.952761500000001,-75.199143199999995,&quot;19104&quot;)</value>
            <value>(39.953175000000002,-75.154942000000005,&quot;19107&quot;)</value>
            <value>(39.953256799999998,-75.156459499999997,&quot;19107&quot;)</value>
            <value>(39.9532594,-75.217020500000004,&quot;19139&quot;)</value>
            <value>(39.953259899999999,-75.172695000000004,&quot;19103&quot;)</value>
            <value>(39.953283900000002,-75.155266100000006,&quot;19107&quot;)</value>
            <value>(39.953308399999997,-75.156438899999998,&quot;19107&quot;)</value>
            <value>(39.953341464499999,-75.158854517400002,&quot;19107&quot;)</value>
            <value>(39.953346000000003,-75.155564100000007,&quot;19107&quot;)</value>
            <value>(39.95337,-75.159295,&quot;19107&quot;)</value>
            <value>(39.953415999999997,-75.157498000000004,&quot;19107&quot;)</value>
            <value>(39.953417363699998,-75.154959108699998,&quot;19107&quot;)</value>
            <value>(39.953431999999999,-75.159193000000002,&quot;19107&quot;)</value>
            <value>(39.953485999999998,-75.156575000000004,&quot;19107&quot;)</value>
            <value>(39.953500935500003,-75.165887902700007,&quot;19102&quot;)</value>
            <value>(39.9535421,-75.202731,&quot;19104&quot;)</value>
            <value>(39.953545099999999,-75.155410000000003,&quot;19107&quot;)</value>
            <value>(39.953655900000001,-75.219351599999996,&quot;19139&quot;)</value>
            <value>(39.953681500000002,-75.155427299999999,&quot;19107&quot;)</value>
            <value>(39.953686599999997,-75.156174199999995,&quot;19107&quot;)</value>
            <value>(39.953700900000001,-75.156104499999998,&quot;19107&quot;)</value>
            <value>(39.953719999999997,-75.159197000000006,&quot;19102&quot;)</value>
            <value>(39.953767300000003,-75.156151800000004,&quot;19107&quot;)</value>
            <value>(39.953789999999998,-75.155829999999995,&quot;19107&quot;)</value>
            <value>(39.953839199999997,-75.156329299999996,&quot;19107&quot;)</value>
            <value>(39.953841099999998,-75.177053200000003,&quot;19103&quot;)</value>
            <value>(39.953847797900004,-75.157372991399995,&quot;19107&quot;)</value>
            <value>(39.953849300000002,-75.1561114,&quot;19107&quot;)</value>
            <value>(39.953862999999998,-75.156041000000002,&quot;19107&quot;)</value>
            <value>(39.953871300000003,-75.156326300000003,&quot;19107&quot;)</value>
            <value>(39.953882137699999,-75.197553634599998,&quot;19104&quot;)</value>
            <value>(39.9539055256,-75.156320370700001,&quot;19107&quot;)</value>
            <value>(39.953940299999999,-75.156309300000004,&quot;19107&quot;)</value>
            <value>(39.9539683,-75.1570234,&quot;19107&quot;)</value>
            <value>(39.954000999999998,-75.157184000000001,&quot;19107&quot;)</value>
            <value>(39.9540079581,-75.156042639099994,&quot;19107&quot;)</value>
            <value>(39.954011800000004,-75.156282700000006,&quot;19107&quot;)</value>
            <value>(39.954027199999999,-75.157399699999999,&quot;19107&quot;)</value>
            <value>(39.954044000000003,-75.15598,&quot;19107&quot;)</value>
            <value>(39.954070899999998,-75.157681800000006,&quot;19107&quot;)</value>
            <value>(39.954120199999998,-75.211235700000003,&quot;19104&quot;)</value>
            <value>(39.954120569300002,-75.156034342200002,&quot;19107&quot;)</value>
            <value>(39.954210000000003,-75.184169999999995,&quot;19195&quot;)</value>
            <value>(39.954228200000003,-75.156230800000003,&quot;19107&quot;)</value>
            <value>(39.954239999999999,-75.156379999999999,&quot;19107&quot;)</value>
            <value>(39.954346600000001,-75.156612999999993,&quot;19107&quot;)</value>
            <value>(39.9543751,-75.155929,&quot;19107&quot;)</value>
            <value>(39.954440103700001,-75.154279880199994,&quot;19107&quot;)</value>
            <value>(39.954450000000001,-75.154321499999995,&quot;19107&quot;)</value>
            <value>(39.954569900000003,-75.170513,&quot;19103&quot;)</value>
            <value>(39.954595044800001,-75.195104701899993,&quot;19104&quot;)</value>
            <value>(39.9546207,-75.154275900000002,&quot;19107&quot;)</value>
            <value>(39.954662900000002,-75.156161999999995,&quot;19107&quot;)</value>
            <value>(39.954720799999997,-75.168953200000004,&quot;19103&quot;)</value>
            <value>(39.9547220185,-75.168496200000007,&quot;19103&quot;)</value>
            <value>(39.954754000000001,-75.156191000000007,&quot;19107&quot;)</value>
            <value>(39.9547768017,-75.1726724432,&quot;19103&quot;)</value>
            <value>(39.954783900000002,-75.156926999999996,&quot;19107&quot;)</value>
            <value>(39.954813000000001,-75.156315000000006,&quot;19107&quot;)</value>
            <value>(39.954838600000002,-75.157381799999996,&quot;19107&quot;)</value>
            <value>(39.954875922500001,-75.193932521199997,&quot;19104&quot;)</value>
            <value>(39.954917999999999,-75.156143999999998,&quot;19107&quot;)</value>
            <value>(39.954930400000002,-75.200131799999994,&quot;19104&quot;)</value>
            <value>(39.954960399999997,-75.157331299999996,&quot;19107&quot;)</value>
            <value>(39.955010399999999,-75.156134199999997,&quot;19107&quot;)</value>
            <value>(39.955010399999999,-75.155598400000002,&quot;19107&quot;)</value>
            <value>(39.955053200000002,-75.156236800000002,&quot;19107&quot;)</value>
            <value>(39.955102500000002,-75.208545999999998,&quot;19104&quot;)</value>
            <value>(39.955156700000003,-75.1562026,&quot;19107&quot;)</value>
            <value>(39.955173000000002,-75.155511000000004,&quot;19107&quot;)</value>
            <value>(39.955179999999999,-75.155570999999995,&quot;19107&quot;)</value>
            <value>(39.955188800000002,-75.155621199999999,&quot;19107&quot;)</value>
            <value>(39.9552318,-75.156119099999998,&quot;19107&quot;)</value>
            <value>(39.955232199999998,-75.155812999999995,&quot;19107&quot;)</value>
            <value>(39.955236815600003,-75.1570234,&quot;19107&quot;)</value>
            <value>(39.955245900000001,-75.156134199999997,&quot;19107&quot;)</value>
            <value>(39.955247076900001,-75.155408701900001,&quot;19107&quot;)</value>
            <value>(39.955248500000003,-75.156248599999998,&quot;19107&quot;)</value>
            <value>(39.9552543,-75.157406499999993,&quot;19107&quot;)</value>
            <value>(39.955283248599997,-75.197553433500005,&quot;19104&quot;)</value>
            <value>(39.955298200000001,-75.154503899999995,&quot;19107&quot;)</value>
            <value>(39.955328779699997,-75.197526729800003,&quot;19104&quot;)</value>
            <value>(39.955350096300002,-75.155213638099994,&quot;19107&quot;)</value>
            <value>(39.955351499999999,-75.156228299999995,&quot;19107&quot;)</value>
            <value>(39.955358699999998,-75.154992800000002,&quot;19107&quot;)</value>
            <value>(39.955368399999998,-75.202437200000006,&quot;19104&quot;)</value>
            <value>(39.955377918300002,-75.155342035000004,&quot;19107&quot;)</value>
            <value>(39.955389799999999,-75.155258500000002,&quot;19107&quot;)</value>
            <value>(39.955399,-75.156727000000004,&quot;19107&quot;)</value>
            <value>(39.9554005671,-75.156901098600002,&quot;19107&quot;)</value>
            <value>(39.955440000000003,-75.156988999999996,&quot;19107&quot;)</value>
            <value>(39.955446999999999,-75.154838999999996,&quot;19107&quot;)</value>
            <value>(39.955457600000003,-75.155199300000007,&quot;19107&quot;)</value>
            <value>(39.955485099999997,-75.154023100000003,&quot;19107&quot;)</value>
            <value>(39.9554884,-75.157327300000006,&quot;19107&quot;)</value>
            <value>(39.955494250000001,-75.155974599999993,&quot;19107&quot;)</value>
            <value>(39.955514999999998,-75.155586,&quot;19107&quot;)</value>
            <value>(39.955530199999998,-75.155469100000005,&quot;19107&quot;)</value>
            <value>(39.955545000000001,-75.155472900000007,&quot;19107&quot;)</value>
            <value>(39.955558699999997,-75.154469700000007,&quot;19107&quot;)</value>
            <value>(39.955579,-75.155678199999997,&quot;19107&quot;)</value>
            <value>(39.955582,-75.155434,&quot;19107&quot;)</value>
            <value>(39.955599599999999,-75.202663999999999,&quot;19104&quot;)</value>
            <value>(39.955601600000001,-75.155700999999993,&quot;19107&quot;)</value>
            <value>(39.955721799999999,-75.156772599999996,&quot;19107&quot;)</value>
            <value>(39.955771499999997,-75.201654399999995,&quot;19104&quot;)</value>
            <value>(39.955995700000003,-75.215415899999996,&quot;19139&quot;)</value>
            <value>(39.956252900000003,-75.155907999999997,&quot;19107&quot;)</value>
            <value>(39.956263100000001,-75.157079499999995,&quot;19107&quot;)</value>
            <value>(39.956282215500003,-75.15419,&quot;19107&quot;)</value>
            <value>(39.956394000000003,-75.157095999999996,&quot;19107&quot;)</value>
            <value>(39.9563986,-75.154287299999993,&quot;19107&quot;)</value>
            <value>(39.956399900000001,-75.157080399999998,&quot;19107&quot;)</value>
            <value>(39.956415169000003,-75.2067339699,&quot;19104&quot;)</value>
            <value>(39.956464269199998,-75.194413333300005,&quot;19104&quot;)</value>
            <value>(39.956502,-75.155844999999999,&quot;19107&quot;)</value>
            <value>(39.956592999999998,-75.160771999999994,&quot;19107&quot;)</value>
            <value>(39.956710516100003,-75.1971027811,&quot;19104&quot;)</value>
            <value>(39.956933200000002,-75.202391399999996,&quot;19104&quot;)</value>
            <value>(39.957109756999998,-75.160870574699999,&quot;19107&quot;)</value>
            <value>(39.957608299999997,-75.203636500000002,&quot;19104&quot;)</value>
            <value>(39.958358699999998,-75.1953934,&quot;19104&quot;)</value>
            <value>(39.958415799999997,-75.163835800000001,&quot;19102&quot;)</value>
            <value>(39.9591840099,-75.194573333299999,&quot;19104&quot;)</value>
            <value>(39.960090000000001,-75.189481999999998,&quot;19104&quot;)</value>
            <value>(39.960234399999997,-75.196636499999997,&quot;19104&quot;)</value>
            <value>(39.961086418900003,-75.143546714199999,&quot;19123&quot;)</value>
            <value>(39.961426000000003,-75.144327000000004,&quot;19123&quot;)</value>
            <value>(39.961892900000002,-75.154961900000004,&quot;19123&quot;)</value>
            <value>(39.962025099999998,-75.172235900000004,&quot;19130&quot;)</value>
            <value>(39.962105399999999,-75.141342499999993,&quot;19123&quot;)</value>
            <value>(39.962265100000003,-75.172464599999998,&quot;19130&quot;)</value>
            <value>(39.963059999999999,-75.164147999999997,&quot;19130&quot;)</value>
            <value>(39.963066400000002,-75.164327299999997,&quot;19130&quot;)</value>
            <value>(39.963077708999997,-75.168027452900006,&quot;19130&quot;)</value>
            <value>(39.963994200000002,-75.132836400000002,&quot;19125&quot;)</value>
            <value>(39.965833699999997,-75.160398000000001,&quot;19123&quot;)</value>
            <value>(39.967160200000002,-75.139208199999999,&quot;19123&quot;)</value>
            <value>(39.968969758900002,-75.134629126299998,&quot;19123&quot;)</value>
            <value>(39.970248366500002,-75.144223437999997,&quot;19123&quot;)</value>
            <value>(39.970481127100001,-75.150396844400007,&quot;19123&quot;)</value>
            <value>(39.970540900000003,-75.157798900000003,&quot;19123&quot;)</value>
            <value>(39.971327000000002,-75.160479699999996,&quot;19123&quot;)</value>
            <value>(39.971708999999997,-75.135062000000005,&quot;19122&quot;)</value>
            <value>(39.971724999999999,-75.165710500000003,&quot;19130&quot;)</value>
            <value>(39.973742799999997,-75.229039999999998,&quot;19131&quot;)</value>
            <value>(39.974078499999997,-75.183846900000006,&quot;19130&quot;)</value>
            <value>(39.974099199999998,-75.181293600000004,&quot;19130&quot;)</value>
            <value>(39.975477599999998,-75.120699299999998,&quot;19125&quot;)</value>
            <value>(39.976126000000001,-75.119234000000006,&quot;19125&quot;)</value>
            <value>(39.976779000000001,-75.158415399999996,&quot;19121&quot;)</value>
            <value>(39.977975999999998,-75.158113,&quot;19121&quot;)</value>
            <value>(39.978181599999999,-75.267287400000001,&quot;19151&quot;)</value>
            <value>(39.978733099999999,-75.159334299999998,&quot;19121&quot;)</value>
            <value>(39.9790688131,-75.160382531400003,&quot;19121&quot;)</value>
            <value>(39.979169800000001,-75.163368599999998,&quot;19121&quot;)</value>
            <value>(39.979456300000002,-75.268840600000004,&quot;19151&quot;)</value>
            <value>(39.979833399999997,-75.232945000000001,&quot;19131&quot;)</value>
            <value>(39.980255100000001,-75.171764600000003,&quot;19121&quot;)</value>
            <value>(39.980915799999998,-75.153283999999999,&quot;19122&quot;)</value>
            <value>(39.982461000000001,-75.156030999999999,&quot;19122&quot;)</value>
            <value>(39.983124699999998,-75.132943400000002,&quot;19122&quot;)</value>
            <value>(39.983144000000003,-75.114941999999999,&quot;19134&quot;)</value>
            <value>(39.983463299999997,-75.101526800000002,&quot;19134&quot;)</value>
            <value>(39.9846845,-75.157205899999994,&quot;19121&quot;)</value>
            <value>(39.9850329,-75.113409799999999,&quot;19134&quot;)</value>
            <value>(39.985719000000003,-75.104253999999997,&quot;19134&quot;)</value>
            <value>(39.985726399999997,-75.104240899999994,&quot;19134&quot;)</value>
            <value>(39.986272399999997,-75.094699000000006,&quot;19134&quot;)</value>
            <value>(39.986448000000003,-75.155694999999994,&quot;19132&quot;)</value>
            <value>(39.987264799999998,-75.109030700000005,&quot;19134&quot;)</value>
            <value>(39.988931899999997,-75.249818300000001,&quot;19151&quot;)</value>
            <value>(39.990259999999999,-75.104491800000005,&quot;19134&quot;)</value>
            <value>(39.991803699999998,-75.113136100000006,&quot;19134&quot;)</value>
            <value>(39.992467599999998,-75.101355499999997,&quot;19134&quot;)</value>
            <value>(39.992700876299999,-75.097575045699998,&quot;19134&quot;)</value>
            <value>(39.994413100000003,-75.147800000000004,&quot;19133&quot;)</value>
            <value>(39.994449500000002,-75.097021699999999,&quot;19134&quot;)</value>
            <value>(39.999576568599998,-75.209388732899995,&quot;19131&quot;)</value>
            <value>(40.000084044099999,-75.228417991599997,&quot;19131&quot;)</value>
            <value>(40.002082100000003,-75.153009299999994,&quot;19140&quot;)</value>
            <value>(40.002757600000002,-75.2135897,&quot;19131&quot;)</value>
            <value>(40.003399999999999,-75.206788099999997,&quot;19131&quot;)</value>
            <value>(40.004105899999999,-75.206765200000007,&quot;19131&quot;)</value>
            <value>(40.005195676100001,-75.104022748600002,&quot;19124&quot;)</value>
            <value>(40.005518792899998,-75.096228999999994,&quot;19124&quot;)</value>
            <value>(40.005767599999999,-75.149495299999998,&quot;19140&quot;)</value>
            <value>(40.006129799999997,-75.078213700000006,&quot;19137&quot;)</value>
            <value>(40.007279219200001,-75.212704092300001,&quot;19131&quot;)</value>
            <value>(40.0074349,-75.212443699999994,&quot;19131&quot;)</value>
            <value>(40.0079019,-75.105859600000002,&quot;19124&quot;)</value>
            <value>(40.008502999999997,-75.098647,&quot;19124&quot;)</value>
            <value>(40.009153400000002,-75.194127100000003,&quot;19129&quot;)</value>
            <value>(40.010472564799997,-75.176148936199993,&quot;19129&quot;)</value>
            <value>(40.015035300000001,-75.108813999999995,&quot;19124&quot;)</value>
            <value>(40.019262931100002,-75.149560198200007,&quot;19140&quot;)</value>
            <value>(40.019695200000001,-75.174271599999997,&quot;19144&quot;)</value>
            <value>(40.021594564399997,-75.148282626599993,&quot;19140&quot;)</value>
            <value>(40.022162999999999,-75.077495099999993,&quot;19124&quot;)</value>
            <value>(40.024332200000003,-75.220751699999994,&quot;19127&quot;)</value>
            <value>(40.024703600000002,-75.221954299999993,&quot;19127&quot;)</value>
            <value>(40.025373700000003,-75.223862800000006,&quot;19127&quot;)</value>
            <value>(40.025684599999998,-75.224219599999998,&quot;19127&quot;)</value>
            <value>(40.029287400000001,-75.2234981,&quot;19127&quot;)</value>
            <value>(40.029462500000001,-75.036027500000003,&quot;19135&quot;)</value>
            <value>(40.029547000000001,-75.058484000000007,&quot;19135&quot;)</value>
            <value>(40.029685391699999,-75.100543333399997,&quot;19124&quot;)</value>
            <value>(40.030022199999998,-75.132179399999998,&quot;19120&quot;)</value>
            <value>(40.030039724399998,-75.099515536300004,&quot;19124&quot;)</value>
            <value>(40.030440843900003,-75.179697692199994,&quot;19120&quot;)</value>
            <value>(40.030632900000001,-75.211292099999994,&quot;19128&quot;)</value>
            <value>(40.030884526599998,-75.104115006300006,&quot;19124&quot;)</value>
            <value>(40.031276917299998,-75.104001441700007,&quot;19124&quot;)</value>
            <value>(40.031458059999999,-75.178847637900006,&quot;19144&quot;)</value>
            <value>(40.031861999999997,-75.107067000000001,&quot;19124&quot;)</value>
            <value>(40.032104400000001,-75.213036399999993,&quot;19128&quot;)</value>
            <value>(40.033050000000003,-75.106396000000004,&quot;19124&quot;)</value>
            <value>(40.0330941,-75.215144699999996,&quot;19128&quot;)</value>
            <value>(40.0332838,-75.177552800000001,&quot;19144&quot;)</value>
            <value>(40.0338311,-75.071940100000006,&quot;19149&quot;)</value>
            <value>(40.0342865,-75.1307075,&quot;19120&quot;)</value>
            <value>(40.034385050899999,-75.216117126200004,&quot;19128&quot;)</value>
            <value>(40.0347942,-75.044609800000003,&quot;19135&quot;)</value>
            <value>(40.035170299999997,-75.178751599999998,&quot;19144&quot;)</value>
            <value>(40.035461300000001,-75.080877799999996,&quot;19149&quot;)</value>
            <value>(40.035906300000001,-75.042070800000005,&quot;19135&quot;)</value>
            <value>(40.036809099999999,-75.039900500000002,&quot;19136&quot;)</value>
            <value>(40.036884700000002,-75.088494100000005,&quot;19111&quot;)</value>
            <value>(40.037662104500001,-75.107322673400006,&quot;19120&quot;)</value>
            <value>(40.037755500000003,-75.176175400000005,&quot;19144&quot;)</value>
            <value>(40.038393999999997,-75.119522000000003,&quot;19120&quot;)</value>
            <value>(40.038557099999998,-75.036860300000001,&quot;19136&quot;)</value>
            <value>(40.039533800000001,-75.056426099999996,&quot;19149&quot;)</value>
            <value>(40.039705300000001,-75.223680400000006,&quot;19128&quot;)</value>
            <value>(40.039857924000003,-75.066225975799995,&quot;19149&quot;)</value>
            <value>(40.040223599999997,-75.076297400000001,&quot;19149&quot;)</value>
            <value>(40.041362100000001,-75.064386900000002,&quot;19149&quot;)</value>
            <value>(40.041491600000001,-75.064835599999995,&quot;19149&quot;)</value>
            <value>(40.041592000000001,-75.055007000000003,&quot;19149&quot;)</value>
            <value>(40.041595314200002,-75.055165373199998,&quot;19149&quot;)</value>
            <value>(40.041604,-75.054338400000006,&quot;19149&quot;)</value>
            <value>(40.041631000000002,-75.064830000000001,&quot;19149&quot;)</value>
            <value>(40.041670338400003,-75.054513096400001,&quot;19149&quot;)</value>
            <value>(40.042119300000003,-75.054919299999995,&quot;19149&quot;)</value>
            <value>(40.042845999999997,-75.073718999999997,&quot;19149&quot;)</value>
            <value>(40.042855500000002,-75.073730900000001,&quot;19149&quot;)</value>
            <value>(40.043520899999997,-75.143376200000006,&quot;19141&quot;)</value>
            <value>(40.043579829999999,-75.052356169999996,&quot;19149&quot;)</value>
            <value>(40.0436859,-75.017873699999996,&quot;19136&quot;)</value>
            <value>(40.043848500000003,-75.053658600000006,&quot;19149&quot;)</value>
            <value>(40.0442199194,-75.232025644199993,&quot;19128&quot;)</value>
            <value>(40.044287400000002,-75.087740299999993,&quot;19111&quot;)</value>
            <value>(40.044957199999999,-75.086460299999999,&quot;19111&quot;)</value>
            <value>(40.047683435499998,-75.070122586899998,&quot;19149&quot;)</value>
            <value>(40.048189100000002,-75.012636499999999,&quot;19136&quot;)</value>
            <value>(40.048507899999997,-75.061846399999993,&quot;19149&quot;)</value>
            <value>(40.049329,-75.012364000000005,&quot;19136&quot;)</value>
            <value>(40.049955199999999,-75.094911699999997,&quot;19111&quot;)</value>
            <value>(40.0500021,-75.063937100000004,&quot;19149&quot;)</value>
            <value>(40.050018000000001,-74.989492999999996,&quot;19114&quot;)</value>
            <value>(40.050099299999999,-75.062968900000001,&quot;19149&quot;)</value>
            <value>(40.051261199999999,-75.184830399999996,&quot;19119&quot;)</value>
            <value>(40.054645200000003,-75.193921399999994,&quot;19119&quot;)</value>
            <value>(40.055289199999997,-75.062780200000006,&quot;19152&quot;)</value>
            <value>(40.055662087400002,-75.004596188700006,&quot;19114&quot;)</value>
            <value>(40.055871600000003,-75.045679500000006,&quot;19152&quot;)</value>
            <value>(40.055950699999997,-75.073856500000005,&quot;19111&quot;)</value>
            <value>(40.057335199999997,-75.014859000000001,&quot;19136&quot;)</value>
            <value>(40.058604500000001,-75.078475999999995,&quot;19111&quot;)</value>
            <value>(40.059011699999999,-75.190348799999995,&quot;19119&quot;)</value>
            <value>(40.060470336500003,-75.051905326500005,&quot;19152&quot;)</value>
            <value>(40.060840900000002,-75.167209099999994,&quot;19150&quot;)</value>
            <value>(40.061306899999998,-75.056175100000004,&quot;19152&quot;)</value>
            <value>(40.062635200000003,-75.237269999999995,&quot;19128&quot;)</value>
            <value>(40.062784999999998,-75.237447000000003,&quot;19128&quot;)</value>
            <value>(40.063164899999997,-75.151915900000006,&quot;19138&quot;)</value>
            <value>(40.064197999999998,-74.986788399999995,&quot;19114&quot;)</value>
            <value>(40.064349508299998,-75.021128657000006,&quot;19114&quot;)</value>
            <value>(40.064679699999999,-75.021039599999995,&quot;19114&quot;)</value>
            <value>(40.064962938299999,-74.983653150899997,&quot;19114&quot;)</value>
            <value>(40.067227899999999,-75.197353899999996,&quot;19118&quot;)</value>
            <value>(40.067765299999998,-75.005869599999997,&quot;19114&quot;)</value>
            <value>(40.068040699999997,-75.068985100000006,&quot;19111&quot;)</value>
            <value>(40.069086499999997,-75.051807800000006,&quot;19152&quot;)</value>
            <value>(40.069231000000002,-75.199751000000006,&quot;19118&quot;)</value>
            <value>(40.069240000000001,-75.19941,&quot;19118&quot;)</value>
            <value>(40.069648000000001,-75.239763999999994,&quot;19128&quot;)</value>
            <value>(40.072127199999997,-75.030838200000005,&quot;19114&quot;)</value>
            <value>(40.072799799999999,-75.0847038,&quot;19111&quot;)</value>
            <value>(40.073108739699997,-75.194663109800004,&quot;19118&quot;)</value>
            <value>(40.0733429,-75.158494099999999,&quot;19150&quot;)</value>
            <value>(40.073726000000001,-75.167159999999996,&quot;19150&quot;)</value>
            <value>(40.074168,-75.202551099999994,&quot;19118&quot;)</value>
            <value>(40.074311000000002,-75.202909000000005,&quot;19118&quot;)</value>
            <value>(40.079318200000003,-75.174134899999999,&quot;19150&quot;)</value>
            <value>(40.079858999999999,-74.993754999999993,&quot;19114&quot;)</value>
            <value>(40.080119600000003,-75.172752799999998,&quot;19150&quot;)</value>
            <value>(40.081109300000001,-75.038252200000002,&quot;19115&quot;)</value>
            <value>(40.0829766003,-74.965479858199998,&quot;19154&quot;)</value>
            <value>(40.083341900000001,-75.0482236,&quot;19115&quot;)</value>
            <value>(40.083764100000003,-74.965655400000003,&quot;19154&quot;)</value>
            <value>(40.083959999999998,-75.035514000000006,&quot;19115&quot;)</value>
            <value>(40.084950780600003,-74.970613941600007,&quot;19154&quot;)</value>
            <value>(40.086077600000003,-74.9648083509,&quot;19154&quot;)</value>
            <value>(40.086753000000002,-75.044435899999996,&quot;19115&quot;)</value>
            <value>(40.088706999999999,-74.967844799999995,&quot;19154&quot;)</value>
            <value>(40.092284499999998,-75.031064299999997,&quot;19115&quot;)</value>
            <value>(40.094462700000001,-75.018353300000001,&quot;19115&quot;)</value>
            <value>(40.095702000000003,-74.975049299999995,&quot;19154&quot;)</value>
            <value>(40.101320899999997,-75.028707800000007,&quot;19115&quot;)</value>
            <value>(40.1021784,-75.031292500000006,&quot;19115&quot;)</value>
            <value>(40.103262999999998,-75.010096000000004,&quot;19116&quot;)</value>
            <value>(40.105068199999998,-75.033614600000007,&quot;19115&quot;)</value>
            <value>(40.1090436,-75.025017000000005,&quot;19116&quot;)</value>
            <value>(40.119622999999997,-75.018102299999995,&quot;19116&quot;)</value>
            <value>(40.1291576108,-75.023681869300006,&quot;19116&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>(39.948910099999999,-75.162415899999999,&quot;19107&quot;)</value>
            <value>(39.9506686,-75.169654899999998,&quot;19103&quot;)</value>
            <value>(39.953288899999997,-75.157854299999997,&quot;19107&quot;)</value>
            <value>(39.955145100000003,-75.157443599999993,&quot;19107&quot;)</value>
            <value>(39.955444900000003,-75.155621400000001,&quot;19107&quot;)</value>
            <value>(39.955477100000003,-75.157298699999998,&quot;19107&quot;)</value>
            <value>(39.9554945,-75.155256300000005,&quot;19107&quot;)</value>
            <value>(39.962182599999998,-75.172189700000004,&quot;19130&quot;)</value>
            <value>(40.002977000000001,-75.221784900000003,&quot;19131&quot;)</value>
            <value>(40.024844700000003,-75.221526600000004,&quot;19127&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Xid_oid]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Relevant' datatype='table' name='[__tableau_internal_object_id__].[Relevant_06C9217F9C154C4B82FD703995702D22]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='business' datatype='table' name='[__tableau_internal_object_id__].[business_821EDB1684CB441383B6F5E99B36361B]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='business id (Relevant)' datatype='string' name='[business_id (Relevant)]' role='dimension' type='nominal' />
      <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal' />
      <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal' />
      <column datatype='string' name='[city (Relevant)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[city_state]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Postal Code' datatype='string' datatype-customized='true' name='[postal_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
      <column caption='review count (Relevant)' datatype='integer' name='[review_count (Relevant)]' role='measure' type='quantitative' />
      <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
      <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Calculation_177610737607733249]' derivation='Attribute' name='[attr:Calculation_177610737607733249:nk]' pivot='key' type='nominal' />
      <column-instance column='[postal_code]' derivation='Count' name='[cnt:postal_code:qk]' pivot='key' type='quantitative' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[postal_code]' derivation='None' name='[none:postal_code:nk]' pivot='key' type='nominal' />
      <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Latitude,Longitude)' hidden='true' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Name,Postal Code,Rating)' hidden='true' name='[Action (Latitude,Longitude,Name,Postal Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
          <groupfilter function='level-members' level='[name]' />
          <groupfilter function='level-members' level='[postal_code]' />
          <groupfilter function='level-members' level='[none:rating:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Postal Code)' hidden='true' name='[Action (Latitude,Longitude,Postal Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
          <groupfilter function='level-members' level='[postal_code]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code)' hidden='true' name='[Action (Postal Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[postal_code]' />
        </groupfilter>
      </group>
      <group caption='Action (Success,Latitude,Longitude,Name,Postal Code,Rating)' hidden='true' name='[Action (Success,Latitude,Longitude,Name,Postal Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1727693444351631362]' />
          <groupfilter function='level-members' level='[none:latitude:ok]' />
          <groupfilter function='level-members' level='[none:longitude:ok]' />
          <groupfilter function='level-members' level='[name]' />
          <groupfilter function='level-members' level='[postal_code]' />
          <groupfilter function='level-members' level='[none:rating:ok]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Latitude, Longitude, Postal Code]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:qk]' />
          <groupfilter function='level-members' level='[none:longitude:qk]' />
          <groupfilter function='level-members' level='[none:postal_code:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/calvi/Documents/My Tableau Repository/Datasources/business (yelp).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/05/2022 01:28:18 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='business (yelp)' increment-value='%null%' refresh-type='create' rows-inserted='150346' timestamp-start='2022-11-05 01:27:48.662' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address</remote-alias>
              <ordinal>0</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>123736</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>business_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[business_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>business_id</remote-alias>
              <ordinal>1</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>150346</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>categories</remote-name>
              <remote-type>129</remote-type>
              <local-name>[categories]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>categories</remote-alias>
              <ordinal>2</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24845</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>3</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1389</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_open</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_open]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_open</remote-alias>
              <ordinal>4</ordinal>
              <family>business</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>5</ordinal>
              <family>business</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>134330</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>6</ordinal>
              <family>business</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>134330</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>7</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53388</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>postal_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[postal_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>postal_code</remote-alias>
              <ordinal>8</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2767</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>review_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[review_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>review_count</remote-alias>
              <ordinal>9</ordinal>
              <family>business</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1123</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stars</remote-name>
              <remote-type>5</remote-type>
              <local-name>[stars]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stars</remote-alias>
              <ordinal>10</ordinal>
              <family>business</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>11</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>_id.oid</remote-name>
              <remote-type>129</remote-type>
              <local-name>[_id.oid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>_id.oid</remote-alias>
              <ordinal>12</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>150346</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.AcceptsInsurance</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.AcceptsInsurance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.AcceptsInsurance</remote-alias>
              <ordinal>13</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Alcohol</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.Alcohol]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Alcohol</remote-alias>
              <ordinal>14</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Ambience</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.Ambience]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Ambience</remote-alias>
              <ordinal>15</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1778</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.BYOB</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.BYOB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.BYOB</remote-alias>
              <ordinal>16</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.BYOBCorkage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.BYOBCorkage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.BYOBCorkage</remote-alias>
              <ordinal>17</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.BestNights</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.BestNights]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.BestNights</remote-alias>
              <ordinal>18</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>94</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.BikeParking</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.BikeParking]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.BikeParking</remote-alias>
              <ordinal>19</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.BusinessAcceptsBitcoin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.BusinessAcceptsBitcoin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.BusinessAcceptsBitcoin</remote-alias>
              <ordinal>20</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.BusinessAcceptsCreditCards</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.BusinessAcceptsCreditCards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.BusinessAcceptsCreditCards</remote-alias>
              <ordinal>21</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.BusinessParking</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.BusinessParking]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.BusinessParking</remote-alias>
              <ordinal>22</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>345</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.ByAppointmentOnly</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.ByAppointmentOnly]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.ByAppointmentOnly</remote-alias>
              <ordinal>23</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Caters</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.Caters]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Caters</remote-alias>
              <ordinal>24</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.CoatCheck</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.CoatCheck]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.CoatCheck</remote-alias>
              <ordinal>25</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Corkage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.Corkage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Corkage</remote-alias>
              <ordinal>26</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.DogsAllowed</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.DogsAllowed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.DogsAllowed</remote-alias>
              <ordinal>27</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.DriveThru</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.DriveThru]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.DriveThru</remote-alias>
              <ordinal>28</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.GoodForDancing</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.GoodForDancing]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.GoodForDancing</remote-alias>
              <ordinal>29</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.GoodForKids</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.GoodForKids]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.GoodForKids</remote-alias>
              <ordinal>30</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.GoodForMeal</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.GoodForMeal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.GoodForMeal</remote-alias>
              <ordinal>31</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>692</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.HairSpecializesIn</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.HairSpecializesIn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.HairSpecializesIn</remote-alias>
              <ordinal>32</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>473</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.HappyHour</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.HappyHour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.HappyHour</remote-alias>
              <ordinal>33</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.HasTV</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.HasTV]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.HasTV</remote-alias>
              <ordinal>34</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Music</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.Music]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Music</remote-alias>
              <ordinal>35</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>447</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.NoiseLevel</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.NoiseLevel]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.NoiseLevel</remote-alias>
              <ordinal>36</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.OutdoorSeating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.OutdoorSeating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.OutdoorSeating</remote-alias>
              <ordinal>37</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.RestaurantsAttire</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.RestaurantsAttire]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.RestaurantsAttire</remote-alias>
              <ordinal>38</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.RestaurantsDelivery</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.RestaurantsDelivery]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.RestaurantsDelivery</remote-alias>
              <ordinal>39</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.RestaurantsGoodForGroups</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.RestaurantsGoodForGroups]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.RestaurantsGoodForGroups</remote-alias>
              <ordinal>40</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.RestaurantsPriceRange2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.RestaurantsPriceRange2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.RestaurantsPriceRange2</remote-alias>
              <ordinal>41</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.RestaurantsReservations</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.RestaurantsReservations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.RestaurantsReservations</remote-alias>
              <ordinal>42</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.RestaurantsTableService</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.RestaurantsTableService]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.RestaurantsTableService</remote-alias>
              <ordinal>43</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.RestaurantsTakeOut</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.RestaurantsTakeOut]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.RestaurantsTakeOut</remote-alias>
              <ordinal>44</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.Smoking</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.Smoking]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.Smoking</remote-alias>
              <ordinal>45</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.WheelchairAccessible</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.WheelchairAccessible]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.WheelchairAccessible</remote-alias>
              <ordinal>46</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>attributes.WiFi</remote-name>
              <remote-type>129</remote-type>
              <local-name>[attributes.WiFi]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>attributes.WiFi</remote-alias>
              <ordinal>47</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hours.Friday</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hours.Friday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hours.Friday</remote-alias>
              <ordinal>48</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1389</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hours.Monday</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hours.Monday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hours.Monday</remote-alias>
              <ordinal>49</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1215</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hours.Saturday</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hours.Saturday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hours.Saturday</remote-alias>
              <ordinal>50</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1437</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hours.Sunday</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hours.Sunday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hours.Sunday</remote-alias>
              <ordinal>51</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1292</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hours.Thursday</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hours.Thursday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hours.Thursday</remote-alias>
              <ordinal>52</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1438</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hours.Tuesday</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hours.Tuesday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hours.Tuesday</remote-alias>
              <ordinal>53</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1245</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hours.Wednesday</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hours.Wednesday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hours.Wednesday</remote-alias>
              <ordinal>54</ordinal>
              <family>business</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1361</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:postal_code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;08009&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;08043&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;08069&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;08096&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;08501&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;08691&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;18927&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;18971&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19018&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19043&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19074&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19104&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19129&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19149&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19348&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19423&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19465&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19710&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;32246&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;33565&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;33603&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;33624&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;33712&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;33773&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34654&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;37012&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;37086&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;37210&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;46033&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;46151&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;46222&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;46259&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;62040&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;62239&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;63043&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;63112&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;63132&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;70001&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;70092&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;70131&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;83709&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;85710&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;85747&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;89508&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;93109&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5A 1B1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5B 0R6&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5C&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5E 4C2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5G 0B6&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5G 2T7&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5H 0X7&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5H 2M3&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5H 3B5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5H 4P4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5J 0N6&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5J 1G3&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5J 1W4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5J 2W9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5J 3P1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5J 5C6&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5K 0T3&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5K 2A7&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5L 0M5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5L 4C2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5M 0H2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5M 4A4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5N 1R5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5P 0P3&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5P 3Z9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5P 4Y5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5S 1B5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5S 2N7&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5T 2Y5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5T 5W8&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5W 0N9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5X 3N7&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5Y 2W1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T5Z 3X9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6B 0A5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6C 0X9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6C 4B2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6E 1V1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6E 2A8&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6E 4B9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6E 5R2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6E 6K5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6G 1E2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6G 2J7&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6H 2V3&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6H 5P9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6J 5E5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6J 6Y6&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6L 2H1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6M 0M8&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6N 1K7&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6T 0B4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6V 1G5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6W 1S4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T6X 0P2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T8A 0Z6&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T8A 4X3&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T8H 0P1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T8H 2K6&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T8N 3T6&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T8N 6K3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;08030&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;08060&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;08085&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;08110&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;08618&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;18912&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;18951&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19007&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19032&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19063&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19090&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19121&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19141&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19317&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19401&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19446&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19512&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19807&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;33545&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;33584&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;33616&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;33704&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;33763&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;34608&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;34688&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;37068&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;37201&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;37228&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;46113&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;46208&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;46237&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;59901&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;62221&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;63017&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;63104&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;63124&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;63146&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;70062&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;70123&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;83646&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;85653&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;85735&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;89439&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;93031&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T4X 1E4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5A 5A1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5B 1K4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5E 1J8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5E 6H7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5G 0W8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5H 0M2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5H 2E4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5H 2S7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5H 3W1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5J 0H3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5J 1A7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5J 1P1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5J 2C3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5J 3G2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5J 4S2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5K 0M1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5K 1R7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5K 2T7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5L 2L8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5L 5B5&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5M 2R1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5N 0Z1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5N 3S5&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5P 3Y2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5P 4P6&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5S&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5S 1T2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5T 1S9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5T 4V4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5V 1A1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5W 1B4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5Y 0M1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T5Z 3C8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6A 3G3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6B 2Y7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6C 3B4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6E 0V6&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6E 1Z8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6E 3W3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6E 5B8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6E 6A4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6G 0M2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6G 1N4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6H 1P2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6H 4R7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6J 2S3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6J 6P9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6K 3X9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6L 6Y7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6N 1B3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6R 2E3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6T 2B5&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6W 0P1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6X 0H5&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T6X 2A1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T8A 4E7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T8B 1K4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T8H 1Y4&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T8N 2E7&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T8N 5H9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;08003&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;08035&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;08065&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;08090&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;08322&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;08629&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;18917&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;18963&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19012&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19036&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19067&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19096&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19125&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19145&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19335&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19407&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19456&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;19603&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;20781&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;33556&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;33596&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;33620&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;33708&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;33769&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;34638&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;34695&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;37075&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;37206&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;37243&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;46131&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;46218&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;46250&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;62024&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;62226&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;63031&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;63108&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;63128&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;63301&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;70072&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;70127&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;83704&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;85704&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;85742&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;89502&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;93103&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5A 5G8&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5B 3M9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5E 2T1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5G&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5G 1L9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5H 0V4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5H 2L5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5H 2W9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5H 4K1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5J 0L2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5J 1C9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5J 1R9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5J 2R7&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5J 3M5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5J 4X9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5K 0N4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5K 1V6&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5K 2W4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5L 2X4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5L 5E9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5M 2Z7&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5N 1P6&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5N 3Y5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5P 3Z3&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5P 4V4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5S 0G5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5S 2E7&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5T 2K4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5T 5L9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5V 1M8&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5X 2E3&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5Y 1Y7&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T5Z 3P1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6A 3Z1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6C&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6C 3P9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6E 0Z6&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6E 2A3&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6E 4A4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6E 5J6&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6E 6H6&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6G 0X8&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6G 2C8&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6H 2K2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6H 5H4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6J 3T5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6J 6S7&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6K 4B5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6L 7C9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6N 1J6&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6R 3K8&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6V 1A8&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6W 1A5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T6X 0K6&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T8A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T8A 4N5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T8H 0K9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T8H 2C1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T8N 2Y3&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;T8N 5S8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;08018&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;08049&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;08075&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;08102&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;08534&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;18054&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;18932&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;18979&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19022&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19050&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19079&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19112&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19133&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19153&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19372&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19432&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19473&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19720&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33511&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33569&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33607&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33634&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33716&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33778&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;34667&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;37026&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;37135&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;37214&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;46040&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;46168&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;46227&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;46269&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;62201&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;62260&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;63052&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;63116&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;63136&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;70006&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;70114&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;70163&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;83716&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;85714&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;85755&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;89519&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;93118&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5A 3L7&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5B 0S4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5C 2R7&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5E 4E1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5G 0N5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5G 3A6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5H 0Z7&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5H 2P6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5H 3K6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5J 0B3&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5J 0P6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5J 1J2&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5J 1Y8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5J 2Z1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5J 3S8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5K&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5K 1C4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5K 2N2&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5L 1B7&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5L 4N4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5M 0J5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5M 4G3&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5N 1S5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5P 2P8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5P 4C3&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5R 0N7&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5S 1K6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5S 2V5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5T 4C8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5T 6G7&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5W 0Z6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5X 5V3&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T5Y 3B5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6A 0G9&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6B 0P2&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6C 0Z5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6E 0A7&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6E 1X2&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6E 2C7&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6E 4E4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6E 5V6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6E 6P5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6G 1E8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6G 2S1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6H 4J8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6H 6A1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6J 5M8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6J 7B5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6L 5Z8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6M 2W8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6N 1M5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6T 0G6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6V 1W4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6W 2P6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T6X 0W8&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T8A 3H9&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T8A 5W9&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T8H 0Z9&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T8N 1E4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T8N 3X6&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T8N 6Z8&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;08010&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;08045&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;08070&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;08097&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;08505&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;08825&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;18928&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;18974&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19019&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19044&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19075&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19106&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19130&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19150&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19353&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19425&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19468&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19711&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;32709&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;33566&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;33604&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;33625&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;33713&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;33774&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34655&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;37013&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;37090&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;37211&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;46036&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;46156&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;46224&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;46260&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;62060&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;62243&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;63044&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;63113&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;63133&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;70002&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;70094&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;70139&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;83712&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;85711&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;85748&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;89509&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;93110&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5A 1C5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5B 0R7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5C 0A4&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5E 4C3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5G 0E1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5G 2X4&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5H 0X8&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5H 2N7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5H 3G2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5J&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5J 0N7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5J 1H7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5J 1W5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5J 2Y7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5J 3P4&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5J 5G5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5K 0W9&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5K 2G2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5L 1A3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5L 4G5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5M 0H3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5M 4B7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5N 1R7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5P 0Y5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5P 4A3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5P 4Z3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5S 1E3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5S 2S2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5T 3H4&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5T 5X1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5W 0P1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5X 3Y7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5Y 2W7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T5Z 3Z8&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6B 0B3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6C 0Y4&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6C 4E3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6E 1W6&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6E 2B2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6E 4C5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6E 5S1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6E 6M2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6G 1E3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6G 2L5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6H 3C1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6H 5W6&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6J 5H2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6J 6Y8&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6L 3Z7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6M 0T9&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6N 1K8&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6T 0C1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6V 1J6&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6W 2B3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T6X 0P9&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T8A 1L3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T8A 4Y6&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T8H 0P5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T8H 2W7&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T8N 3V3&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T8N 6L5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;08004&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;08036&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;08066&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;08091&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;08328&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;08638&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;18923&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;18964&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19013&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19038&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19070&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19101&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19126&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19146&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19341&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19409&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19460&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19702&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28217&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;33558&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;33598&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;33621&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;33709&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;33770&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;34639&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;34697&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;37076&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;37207&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;37246&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;46140&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;46219&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;46254&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;62025&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;62232&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;63033&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;63109&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;63129&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;63302&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;70075&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;70128&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;83705&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;85705&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;85743&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;89503&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;93105&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5A 0A1&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5A 5J6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5B 3Z3&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5E 2T2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5G 0A8&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5G 1Z6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5H 0V6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5H 2L6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5H 2X5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5H 4K8&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5J 0L4&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5J 1E3&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5J 1S5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5J 2W2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5J 3N3&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5J 4Y8&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5K 0P1&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5K 1W3&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5K 2W9&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5L 3C2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5L 5G8&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5M 3B8&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5N 1P9&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5N 4B2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5P 3Z4&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5P 4W1&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5S 1A7&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5S 2G5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5T 2K6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5T 5R5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5V 1P2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5X 2R5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5Y 2B6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T5Z 3S3&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6A 3Z5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6C 0K2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6C 4A5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6E 1K6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6E 2A4&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6E 4B2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6E 5L5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6E 6J7&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6G 0Z1&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6G 2E1&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6H 2K3&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6H 5H5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6J 4C8&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6J 6V1&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6K 4C8&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6L 7E8&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6N 1J7&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6R 3L6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6V 1B1&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6W 1A7&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T6X 0M5&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T8A 0C9&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T8A 4N6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T8H 0L1&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T8H 2G4&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T8N 3B3&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;T8N 5T8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;08028&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;08057&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;08083&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;08108&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;08610&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;18902&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;18947&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19004&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19030&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19060&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19086&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19119&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19139&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19311&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19383&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19443&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19490&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;19805&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;33543&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;33578&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;33614&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;33702&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;33761&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;34606&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;34684&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;37066&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;37188&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;37220&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;46107&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;46205&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;46235&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;46307&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;62208&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;63010&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;63102&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;63122&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;63144&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;70056&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;70121&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;83634&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;85629&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;85724&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;89434&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;90261&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;L3 5TB&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5A 4V9&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5B 0T9&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5E 0N3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5E 5S7&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5G 0R4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5H 0E7&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5H 2E2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5H 2S4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5H 3T8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5J 0G3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5J 0Z1&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5J 1M7&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5J 2B1&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5J 3E8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5J 4K2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5K 0L5&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5K 1N4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5K 2S2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5L 2L3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5L 4Z6&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5M 2P8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5N 0M3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5N 3R4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5P 3W4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5P 4P3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5R 5W9&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5S 1S6&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5T 1K8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5T 4M2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5T 7C5&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5W 1B2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5Y 0L2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T5Z&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6A 1S6&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6B 2N7&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6C 1Z1&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6E 0M2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6E 1Z4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6E 3V2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6E 4Z4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6E 5Y4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6G 0J9&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6G 1K7&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6H 1L2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6H 4P8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6J 1X3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6J 6P3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6K 3N5&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6L 6X2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6N 0B6&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6R 0T7&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6T 1K9&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6W 0L8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6X 0B1&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T6X 1N4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T8A 4E3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T8B 0A4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T8H 1S8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T8N 1H4&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T8N 5E1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;07836&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;08031&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;08061&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;08086&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;08302&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;08619&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;18913&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;18954&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19008&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19033&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19064&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19092&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19122&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19142&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19320&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19403&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19450&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19520&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;19808&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;33547&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;33588&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;33617&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;33705&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;33764&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;34609&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;34689&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;37069&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;37203&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;37229&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;46122&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;46214&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;46239&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;62002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;62222&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;63021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;63105&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;63125&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;63147&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;70063&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;70124&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;83701&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;85658&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;85737&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;89440&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;93067&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T4X 1E5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5A 5B9&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5B 1K8&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5E 1Y8&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5E 6J4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5G 0X1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5H 0N7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5H 2G7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5H 2T3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5H 4A7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5J 0J4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5J 1A9&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5J 1P7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5J 2E7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5J 3K1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5J 4V7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5K 0M9&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5K 1S7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5K 2T8&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5L 2M3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5L 5C7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5M 2R5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5N 1L2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5N 3V9&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5P 3Y4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5P 4R5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5S 0A1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5S 1T3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5T 1T9&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5T 4W5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5V 1B8&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5W 2Y4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5Y 0P5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T5Z 3L2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6A 3X5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6B 3A1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6C 3J1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6E 0V7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6E 1Z9&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6E 3X8&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6E 5C3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6E 6B8&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6G 0T2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6G 1P7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6H 2H3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6H 4X9&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6J 2S6&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6J 6R5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6K 4A2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6L 7A7&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6N 1B5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6R 2X2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6V&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6W 0S4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6X 0J3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T6X 2H4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T8A 4H4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T8B 1M6&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T8H 2A3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T8N 2G4&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T8N 5J1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;08026&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;08054&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;08080&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;08106&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;08608&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;18084&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;18944&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19002&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19027&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19056&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19083&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19116&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19137&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19195&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19380&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19440&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19486&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19803&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;33541&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;33574&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;33612&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;33689&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;33759&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;34221&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;34682&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37064&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37167&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37218&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;46077&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;46203&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;46231&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;46290&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;62205&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;62298&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;63088&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;63120&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;63141&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;70043&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;70118&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;81657&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;85614&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;85719&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;89432&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;89557&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;96161&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5A 4L8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5B 0T3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5E&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5E 5P0&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5G 0P5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5H 0C8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5H 1Y3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5H 2S1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5H 3S4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5J 0C5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5J 0V6&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5J 1L9&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5J 2A4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5J 3C8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5J 4C5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5K 0J7&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5K 1M1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5K 2R1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5L 2K3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5L 4Y5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5M 2P5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5N 0M1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5N 3N7&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5P 3M7&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5P 4M8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5R 3Z2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5S 1P3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5T&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5T 4K3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5T 6N8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5W 1A6&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5Y 0C1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T5Y 3K8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6A 1E9&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6B 2E8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6C 1A1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6E 0G6&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6E 1Z2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6E 3S9&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6E 4P4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6E 5X6&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6E 6V2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6G 1K5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6H 0K8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6H 4M6&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6J 0R8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6J 5X8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6K 2N2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6L 6N5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6N 0B1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6R 0R1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6T 1B6&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6W 0L0&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6W 3Y9&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T6X 1H1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T8A 3X3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T8A 6G3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T8H 1P3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T8N 1E8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;T8N 5B3&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;08005&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;08037&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;08067&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;08093&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;08343&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;08648&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;18924&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;18966&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19014&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19040&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19072&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19102&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19127&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19147&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19342&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19421&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19462&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;19703&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28607&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;33559&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;33601&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;33622&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;33710&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;33771&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;34652&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;34698&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;37080&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;37208&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;38066&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;46142&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;46220&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;46255&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;62034&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;62234&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;63034&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;63110&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;63130&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;63303&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;70085&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;70129&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;83706&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;85706&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;85745&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;89504&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;93106&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5A 0J8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5B 0C1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5B 4H5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5E 2T5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5G 0A9&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5G 2J2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5H 0W3&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5H 2L7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5H 2Y5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5H 4L4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5J 0L9&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5J 1E6&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5J 1V7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5J 2W4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5J 3N8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5J 4Z5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5K 0R8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5K 1X4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5K 2X4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5L 3E8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5L 5H1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5M 3J9&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5N 1R1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5N 4J2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5P 3Z7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5P 4W2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5S 1B3&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5S 2H7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5T 2P4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5T 5R6&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5V 1S5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5X 3C8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5Y 2N2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T5Z 3S6&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6A 3Z7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6C 0K3&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6C 4A6&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6E 1R7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6E 2A6&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6E 4B4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6E 5L8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6E 6J8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6G 1B8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6G 2G9&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6H 2K7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6H 5K3&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6J 4R6&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6J 6V4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6K 4E8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6L 7G4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6N 1K2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6R 3N9&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6V 1C1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6W 1A8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T6X 0N5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T8A 0W9&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T8A 4V2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T8H 0M4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T8H 2G8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T8N 3K8&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;T8N 5Z1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;08020&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;08051&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;08077&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;08103&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;08554&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;18073&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;18936&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;18980&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19023&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19053&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19080&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19113&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19134&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19154&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19373&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19436&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19474&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19725&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;33525&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;33570&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;33609&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;33635&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;33733&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;33781&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;34668&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;37027&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;37138&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;37215&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;46055&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;46184&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;46228&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;46278&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;62202&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;62269&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;63053&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;63117&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;63137&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;70016&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;70115&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;70170&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;83717&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;85715&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;85756&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;89521&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;93190&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5A 3P3&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5B 0S5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5C 3C8&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5E 4E2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5G 0N8&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5G 3E3&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5H 1B8&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5H 2P7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5H 3P5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5J 0B6&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5J 0R5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5J 1J4&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5J 1Z3&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5J 2Z2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5J 3S9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5K 0C1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5K 1H5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5K 2P1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5L 1B8&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5L 4X5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5M 1Z1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5M 4G5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5N 1S7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5P 2S1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5P 4C8&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5R 1B6&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5S 1K9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5S 2V9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5T 4J2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5T 6H4&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5W 0Z8&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5X 5X8&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T5Y 3E1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6A 0J1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6B 1E6&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6C 0Z7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6E 0A8&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6E 1X3&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6E 2S5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6E 4E5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6E 5W8&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6E 6S4&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6G 1E9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6H&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6H 4J9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6H 6A2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6J 5P4&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6J 7B9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6L 6N2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6N 0A1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6N 1N2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6T 0G9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6W&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6W 2Z8&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T6X 1A3&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T8A 3P3&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T8A 5WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T8H 1B4&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T8N 1E5&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T8N 4B1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;T8N 7C8&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;08021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;08052&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;08078&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;08104&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;08560&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;18074&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;18938&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;18984&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19025&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19054&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19081&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19114&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19135&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19155&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19374&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19437&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19475&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19801&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;33527&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;33572&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;33610&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;33637&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;33755&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;33782&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;34669&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;37043&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;37146&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;37216&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;46060&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;46201&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;46229&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;46280&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;62203&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;62285&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;63074&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;63118&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;63138&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;70032&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;70116&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;70195&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;83864&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;85716&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;85757&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;89523&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;93642&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5A 4H2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5B 0S7&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5C 3E1&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5E 4G6&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5G 0N9&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5G 3E8&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5H 1P6&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5H 2R6&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5H 3P7&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5J 0B9&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5J 0R6&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5J 1J5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5J 1Z4&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5J 3B1&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5J 4A1&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5K 0E7&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5K 1H6&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5K 2P3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5L 1R9&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5L 4X6&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5M 1Z2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5N&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5N 2P7&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5P 2S7&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5P 4J7&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5R 1B8&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5S 1L1&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5S 2X1&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5T 4J5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5T 6J1&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5W 0Z9&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5X 6A9&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T5Y 3E5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6A 0J2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6B 1G1&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6C 0Z8&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6E 0C3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6E 1Y9&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6E 3N5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6E 4E6&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6E 5X4&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6E 6T2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6G 1J7&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6H 0K4&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6H 4K1&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6J&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6J 5P5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6J 7C2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6L 6N3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6N 0A5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6R&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6T 0R1&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6W 0E9&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6W 3L5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T6X 1A4&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T8A 3V5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T8A 6B3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T8H 1B5&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T8N 1E6&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T8N 4S8&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T8V 0Y2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;08027&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;08055&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;08081&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;08107&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;08609&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;18901&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;18946&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19003&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19029&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19057&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19085&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19118&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19138&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19301&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19382&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19442&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19487&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;19804&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;33542&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;33576&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;33613&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;336140&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;33701&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;33760&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;34604&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;34683&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;37065&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;37172&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;37219&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;46106&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;46204&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;46234&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;46296&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;62206&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;62558&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;63101&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;63121&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;63143&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;70053&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;70119&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;83616&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;85619&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;85721&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;89433&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;89595&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5A 4N2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5B 0T5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5E 0B8&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5E 5R8&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5G 0P7&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5H 0E6&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5H 2B2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5H 2S3&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5H 3S8&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5J 0C8&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5J 0Y8&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5J 1M1&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5J 2A7&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5J 3E4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5J 4H5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5K 0K6&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5K 1M9&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5K 2S1&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5L 2K4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5L 4Y8&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5M 2P7&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5N 0M2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5N 3P5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5P 3N4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5P 4M9&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5R 4G7&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5S 1S3&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5T 0W5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5T 4K5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5T 6P1&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5W 1A8&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5Y 0C8&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T5Y 3Y2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6A 1H5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6B 2L5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6C 1M1&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6E 0H1&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6E 1Z3&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6E 3T8&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6E 4R5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6E 5X8&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6G&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6G 1K6&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6H 0L4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6H 4M7&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6J 0W3&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6J 6L7&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6K 3L6&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6L 6W7&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6N 0B4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6R 0S9&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6T 1H9&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6W 0L7&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6X 0A9&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T6X 1M5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T8A 4C7&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T8A 6P2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T8H 1R4&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T8N 1E9&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;T8N 5C9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;08029&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;08059&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;08084&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;08109&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;08611&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18911&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18949&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19006&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19031&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19061&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19087&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19120&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19140&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19312&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19395&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19444&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19492&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19806&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;33544&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;33579&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;33615&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;33703&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;33762&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;34607&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;34685&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;37067&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;37189&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;37221&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;46112&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;46206&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;46236&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;48655&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;62220&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;63011&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;63103&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;63123&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;63145&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;70058&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;70122&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;83642&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;85641&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;85730&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;89436&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;93013&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T4X 0B6&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5A 4Z8&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5B 0V1&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5E 0Y2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5E 6C1&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5G 0W6&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5H 0L9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5H 2E3&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5H 2S6&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5H 3V5&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5J 0G7&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5J 0Z9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5J 1N7&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5J 2C1&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5J 3E9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5J 4R5&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5K 0L9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5K 1N9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5K 2S5&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5L 2L4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5L 4Z8&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5M 2P9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5N 0S8&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5N 3S4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5P 3Y1&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5P 4P4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5R 5Y2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5S 1S9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5T 1L6&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5T 4V3&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5V&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5W 1B3&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5Y 0L4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T5Z 2X4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6A 2C1&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6B 2W8&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6C 2H4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6E 0M3&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6E 1Z5&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6E 3V4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6E 5A9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6E 5Y8&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6G 0K1&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6G 1K8&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6H 1M2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6H 4R5&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6J 2G8&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6J 6P6&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6K 3S4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6L 6X4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6N 0B8&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6R 2B3&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6T 1V5&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6W 0L9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6X 0B2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T6X 1X2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T8A 4E6&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T8B 1J3&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T8H 1X1&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T8N 1M9&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T8N 5E2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;08012&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;08046&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;08071&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;08098&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;08518&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10426&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;18929&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;18976&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19046&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19076&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19107&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19131&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19151&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19355&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19426&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19470&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19713&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33503&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33567&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33605&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33626&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33714&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33776&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;34656&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;37015&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;37115&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;37212&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;46037&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;46158&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;46225&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;46262&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;62062&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;62254&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;63045&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;63114&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;63134&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;70003&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;70112&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;70140&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;83713&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;85712&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;85749&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;89511&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;93111&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5A 2L9&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5B 0R8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5C 0B1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5E 4C4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5G 0E7&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5G 2Y5&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5H 0X9&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5H 2N8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5H 3J6&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5J 0A3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5J 0N8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5J 1H8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5J 1X8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5J 2Y8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5J 3R8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5J 5G9&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5K 0Y1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5K 2K3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5L 1A9&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5L 4H3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5M 0H4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5M 4E7&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5N 1R8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5P 1B7&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5P 4A9&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5R&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5S 1E5&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5S 2T1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5T 3J7&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5T 5Y1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5W 0Z3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5X 4H7&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T5Y 2Z2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6A&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6B 0G2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6C 0Z2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6C 4L8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6E 1W7&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6E 2B3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6E 4E2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6E 5S8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6E 6N8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6G 1E5&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6G 2L7&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6H 3G1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6H 5X6&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6J 5J6&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6J 7A2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6L 5N3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6M 1G9&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6N 1L5&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6T 0C2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6V 1K4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6W 2K5&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T6X 0T9&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T8A 2G4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T8A 4Y8&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T8H 0W6&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T8N&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T8N 3V4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T8N 6N8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;08007&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;08041&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;08068&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;08094&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;08344&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;08690&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;18925&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;18969&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19015&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19041&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19073&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19103&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19128&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19148&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19343&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19422&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19464&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;19707&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28801&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;33563&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;33602&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;33623&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;33711&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;33772&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;34653&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;37011&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;37082&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;37209&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;46032&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;46143&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;46221&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;46256&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;62035&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;62236&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;63042&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;63111&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;63131&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;63310&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;70087&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;70130&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;83707&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;85707&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;85746&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;89506&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;93108&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5A 1A6&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5B 0G1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5B 4W4&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5E 4C1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5G 0B3&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5G 2R1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5H 0W7&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5H 2L9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5H 3B2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5H 4M5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5J 0M1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5J 1G1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5J 1V9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5J 2W8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5J 3N9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5J 5B3&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5K 0T2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5K 1X5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5L&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5L 3P9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5M 0H1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5M 3L7&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5N 1R2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5P 0L1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5P 3Z8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5P 4Y2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5S 1B4&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5S 2N2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5T 2P7&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5T 5T8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5V 1T8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5X 3N5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5Y 2V4&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T5Z 3X4&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6B&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6C 0T9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6C 4A7&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6E 1T8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6E 2A7&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6E 4B8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6E 5P2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6E 6J9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6G 1C3&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6G 2J2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6H 2S9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6H 5K4&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6J 4V9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6J 6V7&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6L&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6M 0L9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6N 1K5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6T&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6V 1E7&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6W 1S1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T6X 0P1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T8A 0Z1&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T8A 4W2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T8H 0N6&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T8H 2G9&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T8N 3S6&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;T8N 5Z9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;08001&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;08033&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;08062&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;08088&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;08312&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;08620&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18914&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18960&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19009&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19034&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19065&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19094&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19123&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19143&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19331&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19405&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19453&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19525&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;19809&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;33548&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;33592&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;33618&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;33706&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;33765&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;34610&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;34690&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;37072&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;37204&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;37232&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;46123&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;46216&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;46240&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;62010&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;62223&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;63022&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;63106&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;63126&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;63182&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;70065&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;70125&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;83702&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;85701&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;85739&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;89441&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;93101&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T4X 1E6&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5A 5C5&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5B 2Z1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5E 2C2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5E 6K9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5G 0X9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5H 0N8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5H 2L2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5H 2V7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5H 4B9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5J 0J7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5J 1B8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5J 1R2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5J 2G7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5J 3L9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5J 4X1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5K 0N2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5K 1T3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5K 2V2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5L 2M5&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5L 5E7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5M 2T8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5N 1P3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5N 3W6&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5P 3Y8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5P 4S2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5S 0C2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5S 1T9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5T 1V1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5T 5L4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5V 1H9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5W 4K3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5Y 0S4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T5Z 3L3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6A 3Y1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6B 3K9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6C 3N1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6E 0Z2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6E 2A1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6E 3Y8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6E 5G3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6E 6C7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6G 0W8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6G 2C5&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6H 2J3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6H 5C2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6J 2X8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6J 6R7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6K 4A9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6L 7B5&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6N 1E4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6R 3B9&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6V 0C5&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6W 0Z3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6X 0J4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T6x 2H4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T8A 4L7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T8H&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T8H 2A6&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T8N 2X1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;T8N 5J9&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;08022&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;08053&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;08079&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;08105&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;08601&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;18076&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;18940&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19001&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19026&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19055&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19082&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19115&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19136&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19176&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19375&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19438&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19477&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19802&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;33534&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;33573&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;33611&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;33647&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;33756&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;33785&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;34677&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;37062&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;37148&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;37217&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;46075&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;46202&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;46230&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;46282&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;62204&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;62294&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;63080&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;63119&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;63139&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;70037&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;70117&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;76903&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;84714&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;85718&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;89431&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;89555&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;95661&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5A 4L2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5B 0S9&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5C 3E6&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5E 4H5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5G 0P4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5H&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5H 1S5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5H 2R8&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5H 3S2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5J 0C3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5J 0T4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5J 1K6&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5J 1Z7&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5J 3C6&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5J 4B7&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5K 0G6&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5K 1L2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5K 2P5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5L 2J9&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5L 4Y4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5M 2N6&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5N 0L9&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5N 3N3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5P 2X7&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5P 4K8&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5R 1Y5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5S 1L8&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5S 2X6&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5T 4K2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5T 6J6&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5W 1A2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5X 6E4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T5Y 3E7&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6A 0S4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6B 2E7&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6C 0Z9&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6E 0E1&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6E 1Z1&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6E 3N6&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6E 4E7&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6E 5X5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6E 6T3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6G 1K1&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6H 0K5&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6H 4K4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6J 0R4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6J 5R4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6J 7H8&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6L 6N4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6N 0A8&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6R 0G4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6T 0Y2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6W 0J6&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6W 3R3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T6X 1E9&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T8A 3W8&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T8A 6B8&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T8H 1M1&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T8N 1E7&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T8N 5B2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;T9E 0V3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;08016&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;08048&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;08072&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;08100&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;08530&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;18041&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;18931&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;18977&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19047&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19078&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19111&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19132&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19152&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19357&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19428&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19472&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19717&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;33510&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;33568&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;33606&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;33629&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;33715&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;33777&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;34660&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;37024&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;37122&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;37213&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;46038&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;46163&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;46226&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;46268&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;62095&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;62258&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;63049&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;63115&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;63135&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;70005&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;70113&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;70157&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;83714&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;85713&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;85750&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;89512&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;93117&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5A 3L4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5B 0S1&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5C 2A7&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5E 4C9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5G 0H6&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5G 3A1&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5H 0Y3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5H 2N9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5H 3J7&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5J 0A5&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5J 0P5&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5J 1J1&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5J 1Y7&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5J 2Y9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5J 3S4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5J 5H7&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5K 0Z6&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5K 2L9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5L 1B4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5L 4H6&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5M 0H9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5M 4G2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5N 1S3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5P 1C2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5P 4B3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5R 0M7&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5S 1H5&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5S 2V2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5T 3X1&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5T 6A4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5W 0Z4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5X 5E5&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T5Y 3B2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6A 0G7&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6B 0G3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6C 0Z4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6E&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6E 1W9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6E 2C6&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6E 4E3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6E 5T5&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6E 6P4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6G 1E7&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6G 2L8&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6H 3G4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6H 5Z4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6J 5J7&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6J 7A9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6L 5W9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6M 1M4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6N 1M3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6T 0E6&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6V 1P1&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6W 2P3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T6X 0W6&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T8A 2H6&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T8A 4Z9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T8H 0Y7&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T8N 0R1&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T8N 3X4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T8N 6T9&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;08002&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;08034&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;08063&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;08089&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;08318&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;08628&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;18915&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;18962&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19010&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19035&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19066&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19095&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19124&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19144&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19333&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19406&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19454&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19548&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;19810&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;33549&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;33594&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;33619&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;33707&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;33767&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;34619&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;34691&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;37073&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;37205&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;37238&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;46128&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;46217&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;46241&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;62018&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;62225&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;63026&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;63107&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;63127&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;63190&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;70070&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;70126&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;83703&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;85702&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;85741&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;89501&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;93102&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T4X 1T8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5A 5C9&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5B 3C2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5E 2H4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5E 6W1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5G 1L3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5H 0T8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5H 2L4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5H 2W1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5H 4J1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5J 0K9&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5J 1B9&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5J 1R3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5J 2J2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5J 3M1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5J 4X6&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5K 0N3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5K 1V4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5K 2V3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5L 2T3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5L 5E8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5M 2V8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5N 1P5&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5N 3W9&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5P 3Z1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5P 4T2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5S 0C7&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5S 2B8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5T 1Y7&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5T 5L5&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5V 1L3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5X 0C7&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5Y 0S5&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T5Z 3L7&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6A 3Y8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6B 3V1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6C 3P4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6E 0Z3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6E 2A2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6E 3Y9&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6E 5H5&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6E 6E8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6G 0X1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6G 2C7&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6H 2J4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6H 5C3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6J 3B2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6J 6S6&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6K 4B4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6L 7B9&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6N 1H9&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6R 3E7&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6V 0T1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6W 1A2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T6X 0J6&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T7X 3Y3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T8A 4M2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T8H 0A3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T8H 2A7&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T8N 2X4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;T8N 5N6&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[Latitude, Longitude, Postal Code (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='address' />
        <field-sort-custom-order field='business_id' />
        <field-sort-custom-order field='Calculation_177610737630924805' />
        <field-sort-custom-order field='categories' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='is_open' />
        <field-sort-custom-order field='latitude' />
        <field-sort-custom-order field='longitude' />
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='postal_code' />
        <field-sort-custom-order field='Calculation_177610737607733249' />
        <field-sort-custom-order field='review_count' />
        <field-sort-custom-order field='stars' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='Calculation_1812417403059843073' />
        <field-sort-custom-order field='_id.oid' />
        <field-sort-custom-order field='attributes.AcceptsInsurance' />
        <field-sort-custom-order field='attributes.Alcohol' />
        <field-sort-custom-order field='attributes.Ambience' />
        <field-sort-custom-order field='attributes.BYOB' />
        <field-sort-custom-order field='attributes.BYOBCorkage' />
        <field-sort-custom-order field='attributes.BestNights' />
        <field-sort-custom-order field='attributes.BikeParking' />
        <field-sort-custom-order field='attributes.BusinessAcceptsBitcoin' />
        <field-sort-custom-order field='Calculation_177610737610366978' />
        <field-sort-custom-order field='attributes.BusinessAcceptsCreditCards' />
        <field-sort-custom-order field='attributes.BusinessParking' />
        <field-sort-custom-order field='attributes.ByAppointmentOnly' />
        <field-sort-custom-order field='attributes.Caters' />
        <field-sort-custom-order field='attributes.CoatCheck' />
        <field-sort-custom-order field='attributes.Corkage' />
        <field-sort-custom-order field='attributes.DogsAllowed' />
        <field-sort-custom-order field='attributes.DriveThru' />
        <field-sort-custom-order field='attributes.GoodForDancing' />
        <field-sort-custom-order field='attributes.GoodForKids' />
        <field-sort-custom-order field='attributes.GoodForMeal' />
        <field-sort-custom-order field='Calculation_1812417403059662848' />
        <field-sort-custom-order field='attributes.HairSpecializesIn' />
        <field-sort-custom-order field='attributes.HappyHour' />
        <field-sort-custom-order field='attributes.HasTV' />
        <field-sort-custom-order field='attributes.Music' />
        <field-sort-custom-order field='attributes.NoiseLevel' />
        <field-sort-custom-order field='attributes.OutdoorSeating' />
        <field-sort-custom-order field='attributes.RestaurantsAttire' />
        <field-sort-custom-order field='attributes.RestaurantsDelivery' />
        <field-sort-custom-order field='Calculation_177610737570590720' />
        <field-sort-custom-order field='attributes.RestaurantsGoodForGroups' />
        <field-sort-custom-order field='attributes.RestaurantsPriceRange2' />
        <field-sort-custom-order field='attributes.RestaurantsReservations' />
        <field-sort-custom-order field='Calculation_177610737621962755' />
        <field-sort-custom-order field='attributes.RestaurantsTableService' />
        <field-sort-custom-order field='attributes.RestaurantsTakeOut' />
        <field-sort-custom-order field='attributes.Smoking' />
        <field-sort-custom-order field='attributes.WheelchairAccessible' />
        <field-sort-custom-order field='attributes.WiFi' />
        <field-sort-custom-order field='hours.Friday' />
        <field-sort-custom-order field='hours.Monday' />
        <field-sort-custom-order field='hours.Saturday' />
        <field-sort-custom-order field='hours.Sunday' />
        <field-sort-custom-order field='hours.Thursday' />
        <field-sort-custom-order field='hours.Tuesday' />
        <field-sort-custom-order field='hours.Wednesday' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Heat Map Filtter' datatype='string' name='[hours.Wednesday Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Review Count&quot;'>
          <calculation class='tableau' formula='&quot;Review Count&quot;' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{301fb395-fd43-4c3f-aa10-313e859d82f3}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[cnt:postal_code:qk]' />
            <field name='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[attr:Calculation_177610737607733249:nk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields>
            <field name='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:latitude:qk]' />
            <field name='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:longitude:qk]' />
            <field name='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:postal_code:nk]' />
          </lod-fields>
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Relevant' id='Relevant_06C9217F9C154C4B82FD703995702D22'>
            <properties context=''>
              <relation connection='excel-direct.0v7zco015kzrlu11itbj11qibxf5' name='Relevant' table='[Relevant$]' type='table'>
                <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='city' ordinal='0' />
                  <column datatype='string' name='business_id' ordinal='1' />
                  <column datatype='integer' name='review_count' ordinal='2' />
                  <column datatype='real' name='rating' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='business' id='business_821EDB1684CB441383B6F5E99B36361B'>
            <properties context=''>
              <relation connection='bigquery.1f7otmd143121z13zha7e0og37d0' name='Custom SQL Query' type='text'>with cte1 as (&#13;
SELECT `business`.`_id`.`oid` AS `Xid_oid`,&#13;
  `business`.`address` AS `address`,&#13;
  `business`.`business_id` AS `business_id`,&#13;
  `business`.`categories` AS `categories`,&#13;
  CASE&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%phila%&apos; THEN &apos;Philadelphia, PA&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%tampa%&apos; THEN &apos;Tampa, FL&apos;&#13;
       WHEN `business`.`city` = &apos;New Orleans&apos; THEN &apos;New Orleans, LA&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%nashville%&apos; THEN &apos;Nashville, TN&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%polis%&apos; THEN &apos;Indianapolis, IN&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%tucson%&apos; THEN &apos;Tucson, AZ&apos;&#13;
       WHEN `business`.`city` = &apos;Reno&apos; THEN &apos;Reno, NV&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%santa%&apos; THEN &apos;Santa Barbara, CA&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%louis%&apos; THEN &apos;Saint Louis, MO&apos;&#13;
       WHEN `business`.`city` = &apos;Boise&apos; THEN &apos;Boise, ID&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%clearwater%&apos; THEN &apos;Clearwater, FL&apos;&#13;
       WHEN LOWER(`business`.`city`) LIKE &apos;%peters%&apos; THEN &apos;Saint Petersburg, FL&apos;&#13;
  END as city_state,&#13;
  `business`.`latitude` AS `latitude`,&#13;
  `business`.`longitude` AS `longitude`,&#13;
  `business`.`name` AS `name`,&#13;
  `business`.`postal_code` AS `postal_code`,&#13;
  `business`.`review_count` AS `review_count`,&#13;
  `business`.`stars` AS `stars`,&#13;
  `business`.`state` AS `state`&#13;
FROM `fresh-myth-366902.yelp`.`business` `business`)&#13;
select&#13;
    *&#13;
from&#13;
    cte1&#13;
where city_state is not null&#13;
and `Xid_oid` NOT IN (&apos;6361bc1cce759c550ed3eb48&apos;&#13;
,&apos;6361bba9ce759c550ed25233&apos;&#13;
,&apos;6361bba6ce759c550ed24657&apos;&#13;
,&apos;6361bc12ce759c550ed3c7b8&apos;&#13;
,&apos;6361bbadce759c550ed25cd9&apos;&#13;
,&apos;6361bb9bce759c550ed21af1&apos;&#13;
,&apos;6361bbffce759c550ed38364&apos;&#13;
,&apos;6361bbf6ce759c550ed36276&apos;&#13;
,&apos;6361bbd8ce759c550ed2f5c6&apos;&#13;
,&apos;6361bbf6ce759c550ed3646a&apos;&#13;
,&apos;6361bc24ce759c550ed40975&apos;&#13;
,&apos;6361bbffce759c550ed380a2&apos;&#13;
,&apos;6361bc32ce759c550ed43a15&apos;&#13;
,&apos;6361bba0ce759c550ed22d48&apos;&#13;
,&apos;6361bbb4ce759c550ed27530&apos;&#13;
,&apos;6361bbe3ce759c550ed31d14&apos;&#13;
,&apos;6361bc31ce759c550ed43703&apos;&#13;
,&apos;6361bc28ce759c550ed414b5&apos;)</relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[business_id]' />
              <expression op='[business_id (Relevant)]' />
            </expression>
            <first-end-point object-id='business_821EDB1684CB441383B6F5E99B36361B' unique-key='true' />
            <second-end-point object-id='Relevant_06C9217F9C154C4B82FD703995702D22' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.15kds3c1rjcmo31ewdxgk042r2ms'>
      <datasources>
        <datasource caption='business (yelp)' name='federated.15kds3c1rjcmo31ewdxgk042r2ms' />
      </datasources>
      <datasource-dependencies datasource='federated.15kds3c1rjcmo31ewdxgk042r2ms'>
        <column caption='restaurant_flag' datatype='boolean' name='[Calculation_177610737570590720]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF CONTAINS([categories], &apos;Restaurants&apos;) THEN TRUE&#13;&#10;ELSE FALSE END' />
        </column>
        <column caption='Cuisine' datatype='string' name='[Calculation_177610737607733249]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF CONTAINS([categories], &quot;Middle Eastern&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mediterranean&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mexican&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Turkish&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Korean&quot;) THEN &quot;Korean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Chinese&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Japanese&quot;) THEN &quot;Japanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cajun/Creole&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;French&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;American&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Moroccan&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indian&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Italian&quot;) THEN &quot;Italian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegan&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Spanish&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Thai&quot;) THEN &quot;Thai&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Himalayan/Nepalese&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;African&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Caribbean&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;German&quot;) THEN &quot;German&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Barbeque&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Asian Fusion&quot;) THEN &quot;Asian Fusion&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indonesian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ethiopian&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vietnamese&quot;) THEN &quot;Vietnamese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Russian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Filipino&quot;) THEN &quot;Filipino&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Georgian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Canadian&quot;) THEN &quot;Canadian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Greek&quot;) THEN &quot;Greek&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Polish&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cuban&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Persian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Southern&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pakistani&quot;) THEN &quot;Pakistani&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pan Asian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Taiwanese&quot;) THEN &quot;Taiwanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ukrainian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Belgian&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Irish&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Brazilian&quot;) THEN &quot;Brazilian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;European&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegetarian&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;British&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Armenian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Tex-Mex&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Basque&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Kosher&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Soul&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cafe&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Fast Food&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bakeries&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Food Truck&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Delis&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breweries&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breakfast&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Comfort&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Seafood&quot;) THEN &quot;Seafood&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Buffet&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Gastropub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bistros&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Diner&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Steakhouse&quot;) THEN &quot;Steakhouse&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pizza&quot;) THEN &quot;Pizza&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
        </column>
        <column caption='Weighted Rating' datatype='real' name='[Calculation_177610737610366978]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='ROUND(SUM([stars]*[review_count])/SUM([review_count]),1)' />
        </column>
        <column datatype='string' name='[city_state]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[Calculation_177610737570590720]' derivation='None' name='[none:Calculation_177610737570590720:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_177610737607733249]' derivation='None' name='[none:Calculation_177610737607733249:nk]' pivot='key' type='nominal' />
        <column-instance column='[city_state]' derivation='None' name='[none:city_state:nk]' pivot='key' type='nominal' />
        <column-instance column='[review_count (Relevant)]' derivation='None' name='[none:review_count (Relevant):qk]' pivot='key' type='quantitative' />
        <column caption='review count (Relevant)' datatype='integer' name='[review_count (Relevant)]' role='measure' type='quantitative' />
        <column-instance column='[Calculation_177610737610366978]' derivation='User' name='[usr:Calculation_177610737610366978:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737570590720:nk]'>
        <groupfilter function='member' level='[none:Calculation_177610737570590720:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_177610737607733249:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]'>
        <groupfilter function='member' level='[none:city_state:nk]' member='&quot;Indianapolis, IN&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:review_count (Relevant):qk]' included-values='non-null' />
      <filter class='quantitative' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737610366978:qk]' included-values='all' />
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_88C6FDEECBA541F59D3A51A032E8E372]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Heat Map' type='sheet' worksheet='By Postal Code' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Heat Map' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_9E8B71D45CAD4B06A3676E8AE52B7E2D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Restauarants' type='sheet' worksheet='By Restaurant' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Restauarants' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='By Postal Code'>
      <table>
        <view>
          <datasources>
            <datasource caption='business (yelp)' name='federated.15kds3c1rjcmo31ewdxgk042r2ms' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15kds3c1rjcmo31ewdxgk042r2ms'>
            <column caption='Avg. Successful Rating' datatype='real' name='[Calculation_1727693444340695040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(AVG(IF [Calculation_1812417403059662848] = 1 THEN [rating] END),0)' />
            </column>
            <column caption='Successful Restaurant Count' datatype='integer' name='[Calculation_1727693444346118145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1812417403059662848])' />
            </column>
            <column caption='restaurant_flag' datatype='boolean' name='[Calculation_177610737570590720]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([categories], &apos;Restaurants&apos;) THEN TRUE&#13;&#10;ELSE FALSE END' />
            </column>
            <column caption='Cuisine' datatype='string' name='[Calculation_177610737607733249]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([categories], &quot;Middle Eastern&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mediterranean&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mexican&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Turkish&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Korean&quot;) THEN &quot;Korean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Chinese&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Japanese&quot;) THEN &quot;Japanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cajun/Creole&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;French&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;American&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Moroccan&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indian&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Italian&quot;) THEN &quot;Italian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegan&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Spanish&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Thai&quot;) THEN &quot;Thai&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Himalayan/Nepalese&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;African&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Caribbean&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;German&quot;) THEN &quot;German&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Barbeque&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Asian Fusion&quot;) THEN &quot;Asian Fusion&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indonesian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ethiopian&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vietnamese&quot;) THEN &quot;Vietnamese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Russian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Filipino&quot;) THEN &quot;Filipino&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Georgian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Canadian&quot;) THEN &quot;Canadian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Greek&quot;) THEN &quot;Greek&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Polish&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cuban&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Persian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Southern&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pakistani&quot;) THEN &quot;Pakistani&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pan Asian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Taiwanese&quot;) THEN &quot;Taiwanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ukrainian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Belgian&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Irish&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Brazilian&quot;) THEN &quot;Brazilian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;European&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegetarian&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;British&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Armenian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Tex-Mex&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Basque&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Kosher&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Soul&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cafe&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Fast Food&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bakeries&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Food Truck&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Delis&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breweries&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breakfast&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Comfort&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Seafood&quot;) THEN &quot;Seafood&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Buffet&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Gastropub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bistros&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Diner&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Steakhouse&quot;) THEN &quot;Steakhouse&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pizza&quot;) THEN &quot;Pizza&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Rating' datatype='real' name='[Calculation_177610737610366978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(SUM([stars]*[review_count])/SUM([review_count]),1)' />
            </column>
            <column caption='Restaurant Count' datatype='integer' name='[Calculation_177610737621962755]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Xid_oid])' />
            </column>
            <column caption='Success Flag' datatype='integer' name='[Calculation_1812417403059662848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [city_state] = &apos;Philadelphia, PA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 23 THEN 1 &#13;&#10;ELSEIF [city_state] = &apos;Tampa, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 32 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Boise, ID&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 24 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Clearwater, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 35 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Indianapolis, IN&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 25 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Nashville, TN&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 38 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;New Orleans, LA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 45 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Reno, NV&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 62 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Saint Louis, MO&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 27 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Saint Petersburg, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 36 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Santa Barbara, CA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 67 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Tucson, AZ&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 32 THEN 1&#13;&#10;ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Success Ratio' datatype='real' name='[Calculation_1812417403059843073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(SUM([Calculation_1812417403059662848])/COUNTD([Xid_oid]))' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Xid_oid]' role='dimension' type='nominal' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal' />
            <column datatype='string' name='[city_state]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Xid_oid]' derivation='Count' name='[cnt:Xid_oid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_177610737570590720]' derivation='None' name='[none:Calculation_177610737570590720:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_177610737607733249]' derivation='None' name='[none:Calculation_177610737607733249:nk]' pivot='key' type='nominal' />
            <column-instance column='[city_state]' derivation='None' name='[none:city_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[postal_code]' derivation='None' name='[none:postal_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[review_count (Relevant)]' derivation='None' name='[none:review_count (Relevant):qk]' pivot='key' type='quantitative' />
            <column caption='Postal Code' datatype='string' datatype-customized='true' name='[postal_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
            <column caption='review count (Relevant)' datatype='integer' name='[review_count (Relevant)]' role='measure' type='quantitative' />
            <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
            <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1727693444340695040]' derivation='User' name='[usr:Calculation_1727693444340695040:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1727693444346118145]' derivation='User' name='[usr:Calculation_1727693444346118145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_177610737610366978]' derivation='User' name='[usr:Calculation_177610737610366978:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_177610737621962755]' derivation='User' name='[usr:Calculation_177610737621962755:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1812417403059843073]' derivation='User' name='[usr:Calculation_1812417403059843073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Action (Postal Code)]'>
            <groupfilter function='level-members' level='[postal_code]' user:ui-action-filter='[Action1_88C6FDEECBA541F59D3A51A032E8E372]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737621962755:qk]' included-values='in-range-or-null'>
            <min>1</min>
          </filter>
          <slices>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737570590720:nk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737610366978:qk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737621962755:qk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Action (Postal Code)]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:review_count (Relevant):qk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737610366978:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[avg:rating:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444340695040:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737610366978:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737610366978:qk]' num-steps='20' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c8c8dc</color>
                <color>#b7b7df</color>
                <color>#a5a5e3</color>
                <color>#9292e6</color>
                <color>#7f7fea</color>
                <color>#6c6ced</color>
                <color>#5757f1</color>
                <color>#4242f4</color>
                <color>#2d2df8</color>
                <color>#1616fb</color>
                <color>#0000ff</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0000ff</color>
                <color>#2929f8</color>
                <color>#5050f2</color>
                <color>#7676ec</color>
                <color>#9999e5</color>
                <color>#babadf</color>
                <color>#d9d9d9</color>
                <color>#dfbaba</color>
                <color>#e59999</color>
                <color>#ec7676</color>
                <color>#f25050</color>
                <color>#f82929</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]' value='Success Ratio'>
              <formatted-text>
                <run>Success Ratio</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]' value='City' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]' />
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[cnt:Xid_oid:qk]' />
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:postal_code:nk]' />
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]' />
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444340695040:qk]' />
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[avg:rating:qk]' />
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444346118145:qk]' />
              <geometry column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Postal Code:&#9;</run>
                <run bold='true'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:postal_code:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Restaurant Count:&#9;</run>
                <run bold='true'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[cnt:Xid_oid:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Rating:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[avg:rating:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Successful Restaurant Count:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444346118145:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Successful Rating:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444340695040:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Success Ratio:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Latitude (generated)]</rows>
        <cols>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{54990720-E415-4BF4-960E-5F2EC33A23CA}' />
    </worksheet>
    <worksheet name='By Restaurant'>
      <table>
        <view>
          <datasources>
            <datasource caption='business (yelp)' name='federated.15kds3c1rjcmo31ewdxgk042r2ms' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15kds3c1rjcmo31ewdxgk042r2ms'>
            <column caption='Success' datatype='string' name='[Calculation_1727693444351631362]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1812417403059662848] = 1 THEN &apos;Successful&apos; ELSE &apos; Not Successful&apos; END' />
            </column>
            <column caption='restaurant_flag' datatype='boolean' name='[Calculation_177610737570590720]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([categories], &apos;Restaurants&apos;) THEN TRUE&#13;&#10;ELSE FALSE END' />
            </column>
            <column caption='Cuisine' datatype='string' name='[Calculation_177610737607733249]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([categories], &quot;Middle Eastern&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mediterranean&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mexican&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Turkish&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Korean&quot;) THEN &quot;Korean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Chinese&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Japanese&quot;) THEN &quot;Japanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cajun/Creole&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;French&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;American&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Moroccan&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indian&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Italian&quot;) THEN &quot;Italian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegan&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Spanish&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Thai&quot;) THEN &quot;Thai&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Himalayan/Nepalese&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;African&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Caribbean&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;German&quot;) THEN &quot;German&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Barbeque&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Asian Fusion&quot;) THEN &quot;Asian Fusion&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indonesian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ethiopian&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vietnamese&quot;) THEN &quot;Vietnamese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Russian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Filipino&quot;) THEN &quot;Filipino&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Georgian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Canadian&quot;) THEN &quot;Canadian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Greek&quot;) THEN &quot;Greek&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Polish&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cuban&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Persian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Southern&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pakistani&quot;) THEN &quot;Pakistani&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pan Asian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Taiwanese&quot;) THEN &quot;Taiwanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ukrainian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Belgian&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Irish&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Brazilian&quot;) THEN &quot;Brazilian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;European&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegetarian&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;British&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Armenian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Tex-Mex&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Basque&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Kosher&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Soul&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cafe&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Fast Food&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bakeries&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Food Truck&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Delis&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breweries&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breakfast&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Comfort&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Seafood&quot;) THEN &quot;Seafood&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Buffet&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Gastropub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bistros&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Diner&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Steakhouse&quot;) THEN &quot;Steakhouse&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pizza&quot;) THEN &quot;Pizza&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Rating' datatype='real' name='[Calculation_177610737610366978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(SUM([stars]*[review_count])/SUM([review_count]),1)' />
            </column>
            <column caption='Success Flag' datatype='integer' name='[Calculation_1812417403059662848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [city_state] = &apos;Philadelphia, PA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 23 THEN 1 &#13;&#10;ELSEIF [city_state] = &apos;Tampa, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 32 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Boise, ID&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 24 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Clearwater, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 35 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Indianapolis, IN&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 25 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Nashville, TN&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 38 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;New Orleans, LA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 45 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Reno, NV&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 62 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Saint Louis, MO&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 27 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Saint Petersburg, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 36 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Santa Barbara, CA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 67 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Tucson, AZ&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 32 THEN 1&#13;&#10;ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal' />
            <column datatype='string' name='[city_state]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1727693444351631362]' derivation='None' name='[none:Calculation_1727693444351631362:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_177610737570590720]' derivation='None' name='[none:Calculation_177610737570590720:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_177610737607733249]' derivation='None' name='[none:Calculation_177610737607733249:nk]' pivot='key' type='nominal' />
            <column-instance column='[city_state]' derivation='None' name='[none:city_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[postal_code]' derivation='None' name='[none:postal_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[review_count (Relevant)]' derivation='None' name='[none:review_count (Relevant):qk]' pivot='key' type='quantitative' />
            <column caption='Postal Code' datatype='string' datatype-customized='true' name='[postal_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
            <column caption='review count (Relevant)' datatype='integer' name='[review_count (Relevant)]' role='measure' type='quantitative' />
            <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
            <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative' />
            <column-instance column='[review_count (Relevant)]' derivation='Sum' name='[sum:review_count (Relevant):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_177610737610366978]' derivation='User' name='[usr:Calculation_177610737610366978:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737570590720:nk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737610366978:qk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:review_count (Relevant):qk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:rating:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]' value='City' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:postal_code:nk]' />
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:name:nk]' />
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:rating:qk]' />
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_1727693444351631362:nk]' />
              <lod column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[sum:review_count (Relevant):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Postal Code:&#9;</run>
                <run bold='true'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:postal_code:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Restaurant Name:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rating:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:rating:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'># of Reviews:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[sum:review_count (Relevant):qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Success Flag:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_1727693444351631362:nk]>]]></run>
                <run bold='true' fontcolor='#787878'>Æ </run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:latitude:qk]</rows>
        <cols>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{E6AF70F1-4B55-4F07-A965-C9FD70DA7008}' />
    </worksheet>
    <worksheet name='Tooltip'>
      <table>
        <view>
          <datasources>
            <datasource caption='business (yelp)' name='federated.15kds3c1rjcmo31ewdxgk042r2ms' />
          </datasources>
          <datasource-dependencies datasource='federated.15kds3c1rjcmo31ewdxgk042r2ms'>
            <column caption='Avg. Successful Rating' datatype='real' name='[Calculation_1727693444340695040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IFNULL(AVG(IF [Calculation_1812417403059662848] = 1 THEN [rating] END),0)' />
            </column>
            <column caption='Successful Restaurant Count' datatype='integer' name='[Calculation_1727693444346118145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1812417403059662848])' />
            </column>
            <column caption='Success' datatype='string' name='[Calculation_1727693444351631362]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1812417403059662848] = 1 THEN &apos;Successful&apos; ELSE &apos; Not Successful&apos; END' />
            </column>
            <column caption='restaurant_flag' datatype='boolean' name='[Calculation_177610737570590720]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([categories], &apos;Restaurants&apos;) THEN TRUE&#13;&#10;ELSE FALSE END' />
            </column>
            <column caption='Cuisine' datatype='string' name='[Calculation_177610737607733249]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([categories], &quot;Middle Eastern&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mediterranean&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mexican&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Turkish&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Korean&quot;) THEN &quot;Korean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Chinese&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Japanese&quot;) THEN &quot;Japanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cajun/Creole&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;French&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;American&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Moroccan&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indian&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Italian&quot;) THEN &quot;Italian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegan&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Spanish&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Thai&quot;) THEN &quot;Thai&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Himalayan/Nepalese&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;African&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Caribbean&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;German&quot;) THEN &quot;German&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Barbeque&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Asian Fusion&quot;) THEN &quot;Asian Fusion&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indonesian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ethiopian&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vietnamese&quot;) THEN &quot;Vietnamese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Russian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Filipino&quot;) THEN &quot;Filipino&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Georgian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Canadian&quot;) THEN &quot;Canadian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Greek&quot;) THEN &quot;Greek&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Polish&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cuban&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Persian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Southern&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pakistani&quot;) THEN &quot;Pakistani&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pan Asian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Taiwanese&quot;) THEN &quot;Taiwanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ukrainian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Belgian&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Irish&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Brazilian&quot;) THEN &quot;Brazilian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;European&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegetarian&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;British&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Armenian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Tex-Mex&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Basque&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Kosher&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Soul&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cafe&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Fast Food&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bakeries&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Food Truck&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Delis&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breweries&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breakfast&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Comfort&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Seafood&quot;) THEN &quot;Seafood&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Buffet&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Gastropub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bistros&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Diner&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Steakhouse&quot;) THEN &quot;Steakhouse&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pizza&quot;) THEN &quot;Pizza&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
            </column>
            <column caption='Weighted Rating' datatype='real' name='[Calculation_177610737610366978]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(SUM([stars]*[review_count])/SUM([review_count]),1)' />
            </column>
            <column caption='Restaurant Count' datatype='integer' name='[Calculation_177610737621962755]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Xid_oid])' />
            </column>
            <column caption='Success Flag' datatype='integer' name='[Calculation_1812417403059662848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [city_state] = &apos;Philadelphia, PA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 23 THEN 1 &#13;&#10;ELSEIF [city_state] = &apos;Tampa, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 32 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Boise, ID&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 24 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Clearwater, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 35 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Indianapolis, IN&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 25 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Nashville, TN&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 38 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;New Orleans, LA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 45 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Reno, NV&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 62 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Saint Louis, MO&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 27 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Saint Petersburg, FL&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 36 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Santa Barbara, CA&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 67 THEN 1&#13;&#10;ELSEIF [city_state] = &apos;Tucson, AZ&apos; AND [rating] &gt;= 4 AND [review_count (Relevant)] &gt;= 32 THEN 1&#13;&#10;ELSE 0 &#13;&#10;END' />
            </column>
            <column caption='Success Ratio' datatype='real' name='[Calculation_1812417403059843073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(SUM([Calculation_1812417403059662848])/COUNTD([Xid_oid]))' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Xid_oid]' role='dimension' type='nominal' />
            <column-instance column='[rating]' derivation='Avg' name='[avg:rating:qk]' pivot='key' type='quantitative' />
            <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal' />
            <column datatype='string' name='[city_state]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_177610737570590720]' derivation='None' name='[none:Calculation_177610737570590720:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_177610737607733249]' derivation='None' name='[none:Calculation_177610737607733249:nk]' pivot='key' type='nominal' />
            <column-instance column='[city_state]' derivation='None' name='[none:city_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:ok]' pivot='key' type='ordinal' />
            <column-instance column='[review_count (Relevant)]' derivation='None' name='[none:review_count (Relevant):qk]' pivot='key' type='quantitative' />
            <column caption='Postal Code' datatype='string' datatype-customized='true' name='[postal_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
            <column caption='review count (Relevant)' datatype='integer' name='[review_count (Relevant)]' role='measure' type='quantitative' />
            <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
            <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative' />
            <column-instance column='[review_count]' derivation='Sum' name='[sum:review_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1727693444340695040]' derivation='User' name='[usr:Calculation_1727693444340695040:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1727693444346118145]' derivation='User' name='[usr:Calculation_1727693444346118145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_177610737610366978]' derivation='User' name='[usr:Calculation_177610737610366978:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_177610737621962755]' derivation='User' name='[usr:Calculation_177610737621962755:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1812417403059843073]' derivation='User' name='[usr:Calculation_1812417403059843073:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737621962755:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[avg:rating:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444346118145:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444340695040:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[sum:review_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737621962755:qk]&quot;</bucket>
              <bucket>&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[avg:rating:qk]&quot;</bucket>
              <bucket>&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444346118145:qk]&quot;</bucket>
              <bucket>&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444340695040:qk]&quot;</bucket>
              <bucket>&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[sum:review_count:qk]&quot;</bucket>
              <bucket>&quot;[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Action (Latitude,Longitude,Name,Postal Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_9E8B71D45CAD4B06A3676E8AE52B7E2D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[name]' />
              <groupfilter function='level-members' level='[postal_code]' />
              <groupfilter function='level-members' level='[none:rating:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Action (Latitude,Longitude,Postal Code)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_9E8B71D45CAD4B06A3676E8AE52B7E2D]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:latitude:ok]' />
              <groupfilter function='level-members' level='[none:longitude:ok]' />
              <groupfilter function='level-members' level='[postal_code]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Action (Success,Latitude,Longitude,Name,Postal Code,Rating)]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action2_9E8B71D45CAD4B06A3676E8AE52B7E2D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[postal_code]' member='&quot;46220&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Calculation_1727693444351631362]' member='&quot; Not Successful&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[name]' member='&quot;Keystone Diner&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:latitude:ok]' member='39.849507500000001' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:longitude:ok]' member='-86.122813199999996' />
                            <groupfilter function='member' level='[none:rating:ok]' member='4.1874999999999902' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[name]' member='&quot;Marco&apos;s Restaurant &amp; Lounge&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:latitude:ok]' member='39.8515187' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:longitude:ok]' member='-86.122800499999997' />
                            <groupfilter function='member' level='[none:rating:ok]' member='3.3529411764705799' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[name]' member='&quot;Mississippi Belle&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:latitude:ok]' member='39.851659699999999' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:longitude:ok]' member='-86.125382000000002' />
                            <groupfilter function='member' level='[none:rating:ok]' member='3.8181818181818099' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[name]' member='&quot;Mousetrap Bar &amp; Grill&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:latitude:ok]' member='39.854441100000003' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:longitude:ok]' member='-86.121543500000001' />
                            <groupfilter function='member' level='[none:rating:ok]' member='4.5714285714285703' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[name]' member='&quot;Steak ’n Shake&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:latitude:ok]' member='39.850952510500001' />
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:longitude:ok]' member='-86.122742599999995' />
                            <groupfilter function='member' level='[none:rating:ok]' member='1.70588235294117' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[Calculation_1727693444351631362]' member='&quot;Successful&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[name]' member='&quot;Keystone Sports Review&quot;' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:latitude:ok]' member='39.855275499999998' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:longitude:ok]' member='-86.122497199999998' />
                          <groupfilter function='member' level='[none:rating:ok]' member='4.0208333333333304' />
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[Calculation_1727693444351631362]' />
                <hierarchy name='[none:latitude:ok]' />
                <hierarchy name='[none:longitude:ok]' />
                <hierarchy name='[name]' />
                <hierarchy name='[postal_code]' />
                <hierarchy name='[none:rating:ok]' />
              </order>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737570590720:nk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:review_count (Relevant):qk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737610366978:qk]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[:Measure Names]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Action (Latitude,Longitude,Postal Code)]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Action (Latitude,Longitude,Name,Postal Code,Rating)]</column>
            <column>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Action (Success,Latitude,Longitude,Name,Postal Code,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[avg:rating:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444340695040:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_177610737621962755:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1727693444346118145:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[:Measure Names]' value='184' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{7178DCF5-00CF-4955-B1F7-FD0F8FCC2F70}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Heat Map'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='business (yelp)' name='federated.15kds3c1rjcmo31ewdxgk042r2ms' />
      </datasources>
      <datasource-dependencies datasource='federated.15kds3c1rjcmo31ewdxgk042r2ms'>
        <column caption='Cuisine' datatype='string' name='[Calculation_177610737607733249]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF CONTAINS([categories], &quot;Middle Eastern&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mediterranean&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mexican&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Turkish&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Korean&quot;) THEN &quot;Korean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Chinese&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Japanese&quot;) THEN &quot;Japanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cajun/Creole&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;French&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;American&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Moroccan&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indian&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Italian&quot;) THEN &quot;Italian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegan&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Spanish&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Thai&quot;) THEN &quot;Thai&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Himalayan/Nepalese&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;African&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Caribbean&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;German&quot;) THEN &quot;German&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Barbeque&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Asian Fusion&quot;) THEN &quot;Asian Fusion&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indonesian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ethiopian&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vietnamese&quot;) THEN &quot;Vietnamese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Russian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Filipino&quot;) THEN &quot;Filipino&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Georgian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Canadian&quot;) THEN &quot;Canadian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Greek&quot;) THEN &quot;Greek&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Polish&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cuban&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Persian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Southern&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pakistani&quot;) THEN &quot;Pakistani&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pan Asian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Taiwanese&quot;) THEN &quot;Taiwanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ukrainian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Belgian&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Irish&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Brazilian&quot;) THEN &quot;Brazilian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;European&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegetarian&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;British&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Armenian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Tex-Mex&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Basque&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Kosher&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Soul&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cafe&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Fast Food&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bakeries&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Food Truck&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Delis&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breweries&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breakfast&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Comfort&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Seafood&quot;) THEN &quot;Seafood&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Buffet&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Gastropub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bistros&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Diner&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Steakhouse&quot;) THEN &quot;Steakhouse&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pizza&quot;) THEN &quot;Pizza&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
        </column>
        <column datatype='string' name='[city_state]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[Calculation_177610737607733249]' derivation='None' name='[none:Calculation_177610737607733249:nk]' pivot='key' type='nominal' />
        <column-instance column='[city_state]' derivation='None' name='[none:city_state:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='87760' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='11198'>
            <zone h='87760' id='5' type-v2='layout-basic' w='87115' x='586' y='11198'>
              <zone h='87760' id='3' name='By Postal Code' show-title='false' w='87115' x='586' y='11198'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='87760' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11713' x='87701' y='11198'>
              <zone h='7032' id='23' mode='dropdown' name='By Postal Code' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]' type-v2='filter' values='database' w='11713' x='87701' y='11198'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7032' id='8' mode='dropdown' name='By Postal Code' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]' type-v2='filter' values='database' w='11713' x='87701' y='18230'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8724' id='11' name='By Postal Code' pane-specification-id='4' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]' type-v2='color' w='11713' x='87701' y='25262'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='10156' id='26' type-v2='text' w='93704' x='5710' y='1042'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='16'>Successful Restaurant Heat Map</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='10156' id='33' is-scaled='1' param='D:/Calvin/Documents/GTOMSA/Data &amp; Visual Analytics/Project/Team Logo.gif' type-v2='bitmap' w='5124' x='586' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='42' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='70' h='10156' id='33' is-fixed='true' is-scaled='1' param='D:/Calvin/Documents/GTOMSA/Data &amp; Visual Analytics/Project/Team Logo.gif' type-v2='bitmap' w='5124' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10156' id='26' type-v2='text' w='93704' x='5710' y='1042'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='16'>Successful Restaurant Heat Map</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7032' id='23' mode='dropdown' name='By Postal Code' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]' type-v2='filter' values='database' w='11713' x='87701' y='11198'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7032' id='8' mode='dropdown' name='By Postal Code' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]' type-v2='filter' values='database' w='11713' x='87701' y='18230'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87760' id='3' is-fixed='true' name='By Postal Code' show-title='false' w='87115' x='586' y='11198'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8724' id='11' name='By Postal Code' pane-specification-id='4' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]' type-v2='color' w='11713' x='87701' y='25262'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1C1B564E-7EFF-45E7-9FDC-DB0F4C62FF5E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Restauarants'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='business (yelp)' name='federated.15kds3c1rjcmo31ewdxgk042r2ms' />
      </datasources>
      <datasource-dependencies datasource='federated.15kds3c1rjcmo31ewdxgk042r2ms'>
        <column caption='Cuisine' datatype='string' name='[Calculation_177610737607733249]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF CONTAINS([categories], &quot;Middle Eastern&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mediterranean&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Mexican&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Turkish&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Korean&quot;) THEN &quot;Korean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Chinese&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Japanese&quot;) THEN &quot;Japanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cajun/Creole&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;French&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;American&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Moroccan&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indian&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Italian&quot;) THEN &quot;Italian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegan&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Spanish&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Thai&quot;) THEN &quot;Thai&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Himalayan/Nepalese&quot;) THEN &quot;Indian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;African&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Caribbean&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;German&quot;) THEN &quot;German&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Barbeque&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Asian Fusion&quot;) THEN &quot;Asian Fusion&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Indonesian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ethiopian&quot;) THEN &quot;African&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vietnamese&quot;) THEN &quot;Vietnamese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Russian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Filipino&quot;) THEN &quot;Filipino&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Georgian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Canadian&quot;) THEN &quot;Canadian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Greek&quot;) THEN &quot;Greek&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Polish&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cuban&quot;) THEN &quot;Caribbean&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Persian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Southern&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pakistani&quot;) THEN &quot;Pakistani&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pan Asian&quot;) THEN &quot;Chinese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Taiwanese&quot;) THEN &quot;Taiwanese&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Ukrainian&quot;) THEN &quot;Russian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Belgian&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Irish&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Brazilian&quot;) THEN &quot;Brazilian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;European&quot;) THEN &quot;European&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Vegetarian&quot;) THEN &quot;Vegetarian&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;British&quot;) THEN &quot;British&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Armenian&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Tex-Mex&quot;) THEN &quot;Mexican&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Basque&quot;) THEN &quot;Spanish&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Kosher&quot;) THEN &quot;Middle Eastern&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Soul&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Cafe&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Fast Food&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bakeries&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Food Truck&quot;) THEN &quot;Fast Food&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Delis&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breweries&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Breakfast&quot;) THEN &quot;Cafe&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Comfort&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Seafood&quot;) THEN &quot;Seafood&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Buffet&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Gastropub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Bistros&quot;) THEN &quot;French&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pub&quot;) THEN &quot;Bar&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Diner&quot;) THEN &quot;American&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Steakhouse&quot;) THEN &quot;Steakhouse&quot;&#13;&#10;ELSEIF CONTAINS([categories], &quot;Pizza&quot;) THEN &quot;Pizza&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;END' />
        </column>
        <column datatype='string' name='[city_state]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[Calculation_177610737607733249]' derivation='None' name='[none:Calculation_177610737607733249:nk]' pivot='key' type='nominal' />
        <column-instance column='[city_state]' derivation='None' name='[none:city_state:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89974' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='8984'>
            <zone h='89974' id='5' type-v2='layout-basic' w='80526' x='586' y='8984'>
              <zone h='89974' id='3' name='By Restaurant' show-title='false' w='80526' x='586' y='8984'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='250' h='89974' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='18302' x='81112' y='8984'>
              <zone h='7032' id='19' mode='dropdown' name='By Restaurant' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]' type-v2='filter' values='database' w='18302' x='81112' y='8984'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7032' id='9' mode='dropdown' name='By Restaurant' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]' type-v2='filter' values='relevant' w='18302' x='81112' y='16016'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='135' h='18620' id='20' is-fixed='true' name='Tooltip' show-title='false' w='18302' x='81112' y='23048'>
                <layout-cache cell-count-w='1' non-cell-size-w='184' type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='7942' id='23' type-v2='text' w='93850' x='5564' y='1042'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='16'>Restaurant Locations</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000'>*Please use the select options to look at specific areas of interest and determine the sucess ratio</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7942' id='30' is-scaled='1' param='D:/Calvin/Documents/GTOMSA/Data &amp; Visual Analytics/Project/Team Logo.gif' type-v2='bitmap' w='4978' x='586' y='1042'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='40' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='39' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='53' h='7942' id='30' is-fixed='true' is-scaled='1' param='D:/Calvin/Documents/GTOMSA/Data &amp; Visual Analytics/Project/Team Logo.gif' type-v2='bitmap' w='4978' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7942' id='23' type-v2='text' w='93850' x='5564' y='1042'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='16'>Restaurant Locations</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>*Please use the select options to look at specific areas of interest and determine the sucess ratio</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7032' id='19' mode='dropdown' name='By Restaurant' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]' type-v2='filter' values='database' w='18302' x='81112' y='8984'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7032' id='9' mode='dropdown' name='By Restaurant' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]' type-v2='filter' values='relevant' w='18302' x='81112' y='16016'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='89974' id='3' is-fixed='true' name='By Restaurant' show-title='false' w='80526' x='586' y='8984'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='133' h='18620' id='20' is-fixed='true' name='Tooltip' show-title='false' w='18302' x='81112' y='23048'>
                  <layout-cache cell-count-w='1' non-cell-size-w='184' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DF9B7546-D4A5-4531-9793-3EA44EF71D9C}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Restauarants'>
      <viewpoints>
        <viewpoint name='By Restaurant'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:AdhocCluster:1:ok]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='4' />
        </viewpoint>
        <viewpoint name='Tooltip'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{B5CFE97F-019C-48F6-A78C-922C76763C18}' />
    </window>
    <window class='worksheet' maximized='true' name='By Restaurant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]' type='filter' />
            <card param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[cnt:postal_code:qk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:AdhocCluster:1:ok]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_1727693444351631362:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737570590720:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Xid_oid:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:_id.oid:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='4' />
      </viewpoint>
      <simple-id uuid='{EEC7BECE-F13B-4760-B860-B49A25B125D8}' />
    </window>
    <window class='dashboard' name='Heat Map'>
      <viewpoints>
        <viewpoint name='By Postal Code'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1E23BEA8-41DF-4C0E-83B1-BAE0FF5A34FB}' />
    </window>
    <window class='worksheet' hidden='true' name='By Postal Code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city_state:nk]' type='filter' />
            <card mode='dropdown' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]' type='filter' values='relevant' />
            <card pane-specification-id='4' param='[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]' type='color' />
            <card mode='compact' param='[Parameters].[hours.Wednesday Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:Calculation_177610737607733249:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:_id.oid:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:city:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[none:postal_code:nk]</field>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[usr:Calculation_1812417403059843073:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DB53DF48-B40D-40AF-8FBA-E8986B9449C0}' />
    </window>
    <window class='worksheet' hidden='true' name='Tooltip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15kds3c1rjcmo31ewdxgk042r2ms].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F989F88-8717-4A83-85CB-78C1383288BF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='By Restaurant' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Heat Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Restauarants' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
